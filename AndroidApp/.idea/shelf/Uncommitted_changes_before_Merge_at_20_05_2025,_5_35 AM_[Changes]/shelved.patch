Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    <string name=\"app_name\" translatable=\"false\">Onruf</string>\n    <string name=\"serverError\">Error happened, please try again later</string>\n    <string name=\"connectionError\">Network Connection Fail</string>\n    <string name=\"google_maps_key\" templateMergeStrategy=\"preserve\" translatable=\"false\">AIzaSyA-hhR3N_WfZkeHbBvfIjJtfH9_a1SCiHE</string>\n    <string name=\"saveThisSearch\">Save this search</string>\n    <string name=\"selectCountry\">Select Country</string>\n    <string name=\"selectRegionTitle\">Select Region</string>\n    <string name=\"selectDistrict\">Select District</string>\n    <string name=\"noResultFound\">No Results Found</string>\n    <string name=\"searchHere\">Search Here</string>\n    <string name=\"noSpecificationFound\">No Specification Found</string>\n    <string name=\"noQuestionsFound\">No Questions Found</string>\n    <string name=\"applyFilter\">Apply Filter</string>\n    <string name=\"recentlyView\">Recently View</string>\n    <string name=\"bidding\">Bidding</string>\n    <string name=\"show\">Show</string>\n    <string name=\"noProductsAdded\">No Products Added</string>\n    <string name=\"noProductsFound\">No Products Found</string>\n    <string name=\"noOrdersFound\">No Orders Found</string>\n    <string name=\"enterAllSpecification\">Enter All Specification</string>\n    <string name=\"noSubCategoryFound\">No Sub Categories Found</string>\n    <string name=\"loggedoutsuccessfully\">Logged Out Successfully</string>\n    <string name=\"City\">City</string>\n    <string name=\"Confirm\">Confirm</string>\n    <string name=\"Confirm_Password\">Confirm Password</string>\n    <string name=\"Confirm_New_Password\">Confirm New Password</string>\n    <string name=\"Country\">Country</string>\n    <string name=\"Date_of_Birth\">\n    Date of Birth\n  </string>\n    <string name=\"Category\">\n    Category\n  </string>\n\n    <string name=\"Marketplace\">\n    Marketplace\n  </string>\n    <string name=\"Filter\">\n    Filter\n  </string>\n    <string name=\"New\">New</string>\n    <string name=\"SelectCategory\">\n    Select Category\n  </string>\n\n    <string name=\"Shipping\">\n    Shipping\n  </string>\n    <string name=\"used\">\n    Used\n  </string>\n    <string name=\"Viewall\">\n    View all\n  </string>\n    <string name=\"Password\">Password</string>\n    <string name=\"Region\">Region</string>\n    <string name=\"ResetPassword\">\n    Reset Password\n  </string>\n    <string name=\"Signin\">Sign In</string>\n    <string name=\"Username\">Username</string>\n\n    <string name=\"Female\">Female</string>\n    <string name=\"First_Name\">First Name</string>\n    <string name=\"Forgot_your_password\">\n    Forgot your password?\n  </string>\n    <string name=\"Gender\">\n    Gender\n  </string>\n    <string name=\"Last_Name\">Last Name</string>\n    <string name=\"Login\">\n    Login\n  </string>\n    <string name=\"Male\">Male</string>\n    <string name=\"Fieldcantbeempty\">Field can\\'t be empty</string>\n\n    <string name=\"ZipCode\">\n    Zip Code\n  </string>\n    <string name=\"District_Name\">\n    District Name\n  </string>\n    <string name=\"Enter_your_Email\">\n    Enter your Email\n  </string>\n    <string name=\"QuantityAvailable\">Quantity available</string>\n    <string name=\"Select\" formatted=\"true\">Select %s</string>\n    <string name=\"Please_select\" formatted=\"true\">Please select %s</string>\n    <string name=\"Please\" formatted=\"true\">Please %s</string>\n    <string name=\"Please_enter\" formatted=\"true\">Please enter %s</string>\n\n    <string name=\"Description\">\n    Description\n  </string>\n\n    <string name=\"all\">\n    All\n  </string>\n    <string name=\"BuyNow\">\n    Buy Now\n  </string>\n    <string name=\"Auction\">Auction</string>\n    <string name=\"Abouttheseller\">\n    About the seller\n  </string>\n    <string name=\"AddtoWatchlist\">\n    Add to Watchlist\n  </string>\n    <string name=\"AskaQuestion\">\n    Ask a Question\n  </string>\n\n    <string name=\"Mobile\">Mobile</string>\n    <string name=\"LoginSuccessfully\">\n    Login Successfully\n  </string>\n    <string name=\"Location\">\n    Location\n  </string>\n    <string name=\"Membersince\">\n    Member since\n  </string>\n\n    <string name=\"Email\">\n    Email\n  </string>\n    <string name=\"Facebook\">\n    Facebook\n  </string>\n    <string name=\"PaymentOptions\">\n    Payment Options\n  </string>\n    <string name=\"Price\">Price</string>\n    <string name=\"Address\">\n    Address\n  </string>\n    <string name=\"Twitter\">\n    Twitter\n  </string>\n    <string name=\"Totalnumberoflistings\">\n    Total number of listings\n  </string>\n    <string name=\"Totalnumberofmembers\">\n    Total number of members\n  </string>\n    <string name=\"TotalOnlineVisitors\">\n    Total Online Visitors\n  </string>\n\n    <string name=\"SAR\">SAR</string>\n    <string name=\"Feedback\">Feedback</string>\n    <string name=\"Cancel\">Cancel</string>\n    <string name=\"cancelAshipmentOrder\">\n    Cancel a shipment order\n  </string>\n    <string name=\"Canceled\">\n   shipment has been cancelled\n  </string>\n    <string name=\"Riyadh\">Riyadh</string>\n    <string name=\"download_invoice\">Download Invoice</string>\n    <string name=\"Selling\">Selling</string>\n    <string name=\"ReserveNotMet\">Reserve Not Met</string>\n    <string name=\"Profile\">\n    Profile\n  </string>\n    <string name=\"Giveafeedback\">\n    Give a feedback\n  </string>\n    <string name=\"AddaNewCard\">\n    Add a New Card\n  </string>\n    <string name=\"logout\">Logout</string>\n    <string name=\"FreeshippingwithinSaudiArabia\">Free shipping within Saudi Arabia</string>\n\n    <string name=\"Pleaseaddaphoto\">\n    Please add a photo\n  </string>\n    <string name=\"Purchased\">Purchased</string>\n    <string name=\"Whilweareconfirmingyourpurchase\">\n    While we are confirming your purchase\n  </string>\n    <string name=\"Selectashippingoption\">Select a shipping option</string>\n    <string name=\"selectaPickUpoption\">Select a pick up option</string>\n    <string name=\"Details\">Details</string>\n    <string name=\"Instagram\">Instagram</string>\n    <string name=\"Buying\">\n    Buying\n  </string>\n\n    <string name=\"Selectall\">Select all</string>\n    <string name=\"Categories\">Categories</string>\n    <string name=\"CurrentListings\">\n    Current listings\n  </string>\n    <string name=\"MaximumImagesAllowedtoSelectare\">\n    Maximum Images Allowed to Select are %1$d\n  </string>\n\n    <string name=\"Yes\">Yes</string>\n    <string name=\"No\">No</string>\n    <string name=\"ImageUploadedsuccessfully\">\n    Image Uploaded successfully\n  </string>\n\n    <string name=\"FailedinImageUpload\">\n    Failed in Image Upload\n  </string>\n    <string name=\"Delete\">\n    Delete\n  </string>\n\n    <string name=\"ErrorOccur\">\n   Error Occur\n  </string>\n    <string name=\"EditUserprofile\">\n    Edit User profile\n  </string>\n    <string name=\"Everyone\">\n    Everyone\n  </string>\n\n\n    <string name=\"Landline\">\n    Landline\n  </string>\n    <string name=\"MyProducts\">My Products</string>\n    <string name=\"MyProductsOffers\">My Products Offers</string>\n    <string name=\"Settings\">Settings</string>\n    <string name=\"Respondtothisfeedback\">Respond to this feedback</string>\n    <string name=\"PaymentMethod\">Payment Method</string>\n    <string name=\"NoImageSelected\">No Image Selected</string>\n    <string name=\"Selectshippingoptions\">Select shipping options</string>\n    <string name=\"Showmore\">....Show more</string>\n    <string name=\"Weight\">Weight</string>\n    <string name=\"WeightDimensions\">Weight &amp; Dimensions</string>\n    <string name=\"Width\">Width</string>\n    <string name=\"Card\">Card</string>\n    <string name=\"Confirmlocation\">Confirm location</string>\n    <string name=\"ExpiryDate\">Expiry Date</string>\n    <string name=\"Fixedpriceoffer\">Fixed price offer</string>\n    <string name=\"PickUp\">Pick up</string>\n    <string name=\"mustPickUp\">Must pick up</string>\n    <string name=\"noPickUp\">No pick up</string>\n    <string name=\"pickUpAvaliable\">Pick up available</string>\n    <string name=\"RegistrationNumber\">Registration number</string>\n    <string name=\"Save\">Save</string>\n    <string name=\"NoRecordFound\">\n    No Record Found\n  </string>\n\n    <string name=\"SignUp\">Sign Up</string>\n    <string name=\"Autobid\">\n    Auto Bid\n  </string>\n    <string name=\"BillingAddress\">\n    Billing Address\n  </string>\n    <string name=\"PrimaryContactInformation\">\n    Primary Contact Information\n  </string>\n\n    <string name=\"Information\">\n    Information\n  </string>\n\n    <string name=\"Subuser\">\n    Sub User\n  </string>\n    <string name=\"AreyousureyouwanttodeleteyourItem\">\n    Are you sure you want to delete your Item\n  </string>\n    <string name=\"Error\">\n    Error\n  </string>\n    <string name=\"Item\">\n    Item\n  </string>\n    <string name=\"Listing\">\n    Listing\n  </string>\n    <string name=\"Makkah\">\n    Makkah\n  </string>\n    <string name=\"Verificationcode\">\n    Verification code\n  </string>\n    <string name=\"clickhere\">\n    click here\n  </string>\n    <string name=\"Towatchthevideo\">\n    To watch the video\n  </string>\n    <string name=\"Increment\">\n    Increment\n  </string>\n    <string name=\"Range\">\n    Range\n  </string>\n    <string name=\"Balance\">\n    Balance\n  </string>\n    <string name=\"Remaining\">\n    Remaining\n  </string>\n    <string name=\"Views\">\n    Views\n  </string>\n    <string name=\"Emailisrequired\">\n    please  enter valid  E-mail\n  </string>\n    <string name=\"Pleaseenteravalidemailaddress\">\n    Please enter a valid email address\n  </string>\n    <string name=\"Passwordisrequired\">Please  enter  password</string>\n    <string name=\"Ididntreceiveacode\">I didn\\'t receive a code!</string>\n    <string name=\"RESEND\">RESEND</string>\n    <string name=\"CodeExpired\">Code Expired</string>\n    <string name=\"OTPWrongTrialsExcced\">OTP Wrong Trials Exceeded</string>\n    <string name=\"InvalidOTP\">Invalid OTP</string>\n    <string name=\"NEXT\">NEXT</string>\n    <string name=\"EnterDateofBirth\">Enter Date of Birth</string>\n\n    <string name=\"StreetNumber\">Street Number</string>Area\n\n    <string name=\"Area\">Area</string>Zip Code\n    <string name=\"PhoneNumber\">Phone Number</string>\n\n\n    <string name=\"Passwordtooweak\">\n Password too weak\n  </string>\n\n    <string name=\"ShoppingCart\">Shopping Cart</string>\n\n    <string name=\"PrimaryContact\">Primary Contact</string>\n\n    <string name=\"BusinessName\">Business Name</string>\n\n    <string name=\"UniqueTrades\">9 UniqueTrades</string>\n\n\n    <string name=\"PermissionDenied\">Permission denied</string>\n\n\n    <string name=\"UpdateProfilePicture\">Update Profile Picture</string>\n\n\n    <string name=\"BusinessNumber\">Business Number</string>\n\n\n    <string name=\"ItemsImSelling\">Items I\\'m Selling</string>\n\n    <string name=\"SellingOptions\">Selling Options</string>\n\n    <string name=\"TheProducthasbeenRestocked\">The Product has been Restocked</string>\n\n    <string name=\"TheProducthasbeenrelisted\">The Product has been Relisted</string>\n\n    <string name=\"Nocurrentoffers\">No current offers</string>\n\n    <string name=\"AskSellerTomakefixedprice\">Ask sellers to make a fixed price offer on listings that closed and did not sell</string>\n\n    <string name=\"NewProduct\">New Product</string>\n\n    <string name=\"Notifications\">Notifications</string>\n\n    <string name=\"EmailPreferences\">Email Preferences</string>\n\n    <string name=\"PrivacyOptions\">Privacy Options</string>\n\n    <string name=\"language\">Language</string>\n\n    <string name=\"currentLanguage\">English</string>\n\n    <string name=\"Current\">Current</string>\n    <string name=\"NotificationSettings\">Notification Settings</string>\n\n    <string name=\"Receivepushnotifications\">Receive push notifications</string>\n\n    <string name=\"Vibrateforpushnotification\">Vibrate for push notification</string>\n\n    <string name=\"Soundforpushnotifications\">Sound for push notifications</string>\n\n    <string name=\"Receivefavouritesnotifications\">Receive favourites notifications</string>\n\n    <string name=\"Receiving14outof14notifications\">Receiving 14 out of 14 notifications</string>\n\n    <string name=\"Configurepushnotificationtype\">Configure push notification type</string>\n\n    <string name=\"Donotdisturb\">Do not disturb</string>\n\n    <string name=\"Blockpushnotificationsonadailyschdule\">Block push notifications on a daily schedule</string>\n\n    <string name=\"Addavideolink\">Add a video link</string>\n\n    <string name=\"outofphotos\">0 out of 10 photos</string>\n    <string name=\"Nosoldlistings\">No sold listings</string>\n\n    <string name=\"currentimageabannerimage\">Note*: Click the checkbox to make the current image a banner image.</string>\n\n    <string name=\"SelectedImages\">Selected Image(s)</string>\n    <string name=\"pleaseSelectImages\">please Select Image(s)</string>\n    <string name=\"please_select_a_shipping_option\">Please select a shipping option</string>\n    <string name=\"please_select_option\">Please select option</string>\n    <string name=\"selected_image_limit_reached\"> Images max limit  reached</string>\n    <string name=\"SelectAnyoneCountry\">Select Anyone Country</string>\n\n    <string name=\"SelectAnyoneRegion\">Select Anyone Region</string>\n\n    <string name=\"SelectAnyoneCity\">SelectAnyoneCity</string>\n\n    <string name=\"Brandnewunuseditemwithoriginal\">Brand new, unused item with original manuals and packaging</string>\n\n\n    <string name=\"PricingandPayment\">Pricing and Payment</string>\n\n    <string name=\"Selectanyoneoption\">Select any one option</string>\n    <string name=\"SelectSaleType\">Select any one option of sale type</string>\n    <string name=\"Selectanyonepaymentmethod\">Select any one payment method</string>\n    <string name=\"Startpriceshouldbesmaller\">Start price should be smaller</string>\n\n    <string name=\"Buynowmaxlimitreached\">Buy now max limit reached</string>\n\n    <string name=\"Reservemaxlimitreached\">Reserve max limit reached</string>\n\n    <string name=\"StartPricemaxlimitreached\">Start Price max limit reached</string>\n\n    <string name=\"BuyNowAndAuction\">Buy Now And Auction</string>\n\n    <string name=\"ReservePrice\">Reserve Price</string>\n\n    <string name=\"Choosealistingtype\">Choose a listing type</string>\n\n    <string name=\"Youdonthaveanypaymentinstructionsset\">You don\\'t have any payment instructions set</string>\n\n    <string name=\"FixedLength\">Fixed Length</string>\n\n    <string name=\"SelectTime\">Select Time</string>\n\n    <string name=\"SelectaPickupOption\">Select a Pick-up Option</string>\n\n    <string name=\"Promotional\">Promotional</string>\n\n    <string name=\"Selectanyoneitem\">Select any one item</string>\n    <string name=\"largerimage\">8x larger image in search results Best position in category</string>\n    <string name=\"largerimageprice\">$45.99</string>\n    <string name=\"Bestpositionincategory\">4x larger image in search results Best position in category</string>\n    <string name=\"Bestpositionincategoryprice\">$29.99</string>\n    <string name=\"featuretext\">2x larger image in search results Best position in category</string>\n    <string name=\"featureprice\">$33.99</string>\n    <string name=\"gallerytext\">1x larger image in search results Best position in category</string>\n    <string name=\"galleryprice\">$8.99</string>\n    <string name=\"basictext\">Continue with a Basic listing at no additional cost</string>\n    <string name=\"ConfirmDetails\">Confirm Details</string>\n    <string name=\"BankFeesmayapply\">(Bank Fees may apply)</string>\n    <string name=\"DurationAndShipping\">Duration And Shipping</string>\n    <string name=\"ShippingWithinSaudia\">Shipping Within Saudia</string>\n    <string name=\"failed\">Failed</string>\n    <string name=\"AlternateEmail\">Alternate Email</string>\n    <string name=\"GoogleMapIntegration\">Google Map Integration</string>\n    <string name=\"SEEALL\">See all</string>\n    <string name=\"Mutenotifications\">Mute notifications</string>\n    <string name=\"Blockpushnotificationstemporarily\">Block push notifications temporarily</string>\n    <string name=\"Sendtestpushnotification\">Send test push notification</string>\n    <string name=\"Nullbackresponse\">Null-back response</string>\n    <string name=\"FailedResponse\">Failed Response</string>\n    <string name=\"Hisaysomething\">Hi say something</string>\n    <string name=\"REFINE\">REFINE</string>\n    <string name=\"Failedtoaddfavorites\">Failed to add favorites</string>\n    <string name=\"AddedtoFavorites\">Added to Favorites</string>\n    <string name=\"Whatareyoulisting\">What are you listing?</string>\n    <string name=\"FINDACATEGORY\">FIND A CATEGORY</string>\n    <string name=\"TotalInclusiveofVAT\">Total (Inclusive of VAT)</string>\n    <string name=\"Finish\">Finish</string>\n    <string name=\"Continue\">Continue</string>\n    <string name=\"Done\">Done!</string>\n    <string name=\"title_activity_show_branches_map\">ShowBranchesMapActivity</string>\n    <string name=\"mirror_degree\">180</string>\n    <string name=\"PleaseenteravalidPhoneNumber\">Please enter a valid Phone Number</string>\n    <string name=\"Passworddonotmatch\">Password do not match</string>\n    <string name=\"Pleasewaituntilthecodeexpires\">Please wait until the code expires</string>\n    <string name=\"VerificationSuccessful\">Verification Successful</string>\n    <string name=\"Edit\">Edit</string>\n    <string name=\"VerificationFailed\">Verification Failed!...Resend Code</string>\n    <string name=\"Seconds\">Resend the code after: %1$s seconds</string>\n    <string name=\"Seconds2\">Resend the code after: </string>\n    <string name=\"seconds60\">60 seconds</string>\n    <string name=\"Pleaseselectagender\">Please select a gender</string>\n    <string name=\"Accounthasbeencreated\">Account has been created</string>\n    <string name=\"NoResponse\">No Response</string>\n    <string name=\"FeaturedGeneralAds\">Featured General Ads</string>\n    <string name=\"SALESFOLDER\">SALES FOLDER</string>\n    <string name=\"KEYWORD\">KEYWORD</string>\n    <string name=\"Hereisthesharecontentbody\">Here is the share content body</string>\n    <string name=\"SubjectHere\">Subject Here</string>\n    <string name=\"Sharevia\">Share via</string>\n    <string name=\"Registrationexpires\">Registration expires</string>\n    <string name=\"AdID\">Ad ID</string>\n    <string name=\"StartingbidNoreserve\">Starting bid | No reserve</string>\n    <string name=\"questions0\">0 questions</string>\n    <string name=\"Sellersotherlistings\">Seller\\'s other listings</string>\n    <string name=\"positive100\">100% positive</string>\n    <string name=\"OtherOptions\">Other Options</string>\n    <string name=\"Share\">Share</string>\n    <string name=\"Report\">Report</string>\n    <string name=\"PLACEBID\">PLACE BID</string>\n    <string name=\"QuestionAnswers\">Question/Answers</string>\n\n    <string name=\"Questionhasbeenpost\">Question has been post</string>\n    <string name=\"FailedtopostQuestion\">Failed to post Question</string>\n    <string name=\"Answerhasbeenposted\">Answer has been posted</string>\n    <string name=\"CommenthasbeenPosted\">Comment has been Posted</string>\n    <string name=\"Answerisalreadygiven\">Answer is already given</string>\n    <string name=\"TypeYourAnswerBelowTextBoxAgainstTheSelectedQuestion\">Type Your Answer Below Text-Box Against The Selected Question</string>\n    <string name=\"ReplyAnswer\">Reply Answer</string>\n    <string name=\"TypeYourCommentBelowTextBoxAgainstTheSelectedQuestion\">Type Your Comment Below Text-Box Against The Selected Question</string>\n    <string name=\"Brand\">Brand</string>\n    <string name=\"comment\">Comment</string>\n    <string name=\"FirstGiveAnswerThenYouCanDoComment\">First Give Answer Then You Can Do Comment</string>\n    <string name=\"RecentAccountActivity\">Recent Account Activity</string>\n    <string name=\"LastLoggedIn\">Last Logged In</string>\n    <string name=\"MemberListing\">Member Listing</string>\n    <string name=\"questions\">%1$d questions</string>\n    <string name=\"FailedtogetQuestions\">Failed to get Questions</string>\n    <string name=\"SellerAddedtoFavorites\">Seller Added to Favorites</string>\n    <string name=\"Failedtoaddfavorite\">Failed to add favorite</string>\n\n\n    <!--    Old String Resources-->\n    <string name=\"title_activity_bottmmm\" translatable=\"false\">Bottmmm</string>\n    <string name=\"title_home\">Home</string>\n    <string name=\"title_account\">Account</string>\n    <string name=\"title_notifications\">Notifications</string>\n    <string name=\"title_watchlist\">Favorite</string>\n    <string name=\"title_about_seller\">About The Seller</string>\n    <string name=\"something_went_wrong\">Something went wrong</string>\n    <string name=\"listing\"> %1$d Listing</string>\n    <string name=\"neutrals\">Neutral(s)</string>\n    <string name=\"negatives\">Negative(s)</string>\n    <string name=\"positive\">Positive(s)</string>\n    <string name=\"recoverpass\">Forgot Password? <font color='#339933'>Recover here</font></string>\n    <string name=\"signuptext\">Dont have an account? <font color='339933'>Sign Up</font></string>\n    <string name=\"alreadyaccount\">Already have an account? Sign In</string>\n    <string name=\"browsemarketnav\">All Categories   >   Marketplace</string>\n    <string name=\"type_your_password_here\">Type Your Password Here</string>\n    <string name=\"type_your__curretn_password_here\">Type Your Current Password Here</string>\n    <string name=\"type_new_password_here\">Type New Password Here</string>\n    <string name=\"type_your_email_here\">Type Your Email Here</string>\n\n    <string name=\"ThisEmailAddressDoesnotExist\">This Email Address Does not Exist</string>\n    <string name=\"InternetIssue\">Internet Issue</string>\n\n\n    <string-array name=\"countrylist\">\n        <item> - - Select Country - - </item>\n        <item>Saudia Arabia</item>\n        <item>U.A.E</item>\n        <item>Bahrain</item>\n        <item>Oman</item>\n        <item>Kuwait</item>\n    </string-array>\n\n    <string-array name=\"bodylist\">\n        <item> - - Select BodyType - - </item>\n        <item>Coupe</item>\n        <item>Hatchback</item>\n        <item>Pick Up</item>\n        <item>Sedan</item>\n        <item>Hard Top Convertible</item>\n        <item>Soft Top Convertible</item>\n        <item>Sports Car</item>\n        <item>RV / SUVs</item>\n        <item>Van</item>\n        <item>Wagon</item>\n        <item>Other</item>\n    </string-array>\n\n    <string-array name=\"carslist\">\n        <item> - - Select Company - - </item>\n        <item>Alfa Romeo</item>\n        <item>Aston Martin</item>\n        <item>Audi</item>\n        <item>Bentley</item>\n        <item>BMW</item>\n        <item>BYD</item>\n        <item>Cadillac</item>\n        <item>Chery</item>\n        <item>Chevrolet</item>\n        <item>Chrysler</item>\n        <item>Citroën</item>\n        <item>Daewoo</item>\n        <item>Daihatsu</item>\n        <item>Dodge</item>\n        <item>Ferrari</item>\n        <item>Fiat</item>\n        <item>Ford</item>\n        <item>Foton</item>\n        <item>Geely</item>\n        <item>Genesis</item>\n        <item>GMC</item>\n        <item>Great Wall</item>\n        <item>Hover</item>\n        <item>Honda</item>\n        <item>Hummer</item>\n        <item>Hyundai</item>\n        <item>Isuzu</item>\n        <item>Jaguar</item>\n        <item>Jeep</item>\n        <item>Kia</item>\n        <item>Lamborghini</item>\n        <item>Land Rover</item>\n        <item>Lexus</item>\n        <item>Lotus</item>\n        <item>Maserati</item>\n        <item>Mazda</item>\n        <item>McLaren</item>\n        <item>Mercedes-Benz</item>\n        <item>MG</item>\n        <item>MINI</item>\n        <item>Mitsubishi</item>\n        <item>Nissan</item>\n        <item>Opel</item>\n        <item>Peugeot</item>\n        <item>Porsche</item>\n        <item>Renault</item>\n        <item>Rolls-Royc</item>\n        <item>Saab</item>\n        <item>Skoda</item>\n        <item>Smart</item>\n        <item>Ssangyong</item>\n        <item>Subaru</item>\n        <item>Suzuki</item>\n        <item>Tesla</item>\n        <item>Toyota</item>\n        <item>Volkswagen</item>\n        <item>TATA</item>\n        <item>Volvo</item>\n        <item>Other</item>\n    </string-array>\n\n    <string-array name=\"favsearch\">\n        <item>Dont Email me</item>\n        <item>Email me daily</item>\n        <item>Email me every week</item>\n        <item>Email me every 3 days</item>\n        <item>Email me once a week</item>\n    </string-array>\n\n    <string-array name=\"regionlist\">\n        <item>Dubai</item>\n        <item>Abu Dhabi</item>\n        <item>Sharjah</item>\n        <item>Al Ain</item>\n        <item>Ajman</item>\n    </string-array>\n\n    <string-array name=\"citylist\">\n        <item> - - Select City - - </item>\n        <item>Al Bahah</item>\n        <item>Al Aqiq</item>\n        <item>Al Karra </item>\n        <item>Al Mandaq </item>\n        <item>Baljurashi</item>\n    </string-array>\n    <!-- TODO: Remove or change this placeholder text -->\n    <string name=\"hello_blank_fragment\" translatable=\"false\">Hello blank fragment</string>\n    <string name=\"motors_category\" translatable=\"false\">Motors Category</string>\n\n    <string-array name=\"quantity_list\">\n        <item>Qty 1</item>\n        <item>Qty 2</item>\n        <item>Qty 3</item>\n        <item>Qty 4</item>\n        <item>Qty 5</item>\n        <item>Qty 6</item>\n        <item>Qty 7</item>\n        <item>Qty 8</item>\n        <item>Qty 9</item>\n        <item>Array Item Three</item>\n    </string-array>\n\n    <string-array name=\"quantity_number_list\">\n        <item>1</item>\n        <item>2</item>\n        <item>3</item>\n        <item>4</item>\n        <item>5</item>\n        <item>6</item>\n        <item>7</item>\n        <item>8</item>\n        <item>9</item>\n    </string-array>\n\n\n    <string-array name=\"payment_method\">\n        <item>Select payment</item>\n        <item>Cash</item>\n        <item>Card</item>\n\n    </string-array>\n\n    <string-array name=\"shipping_method\">\n        <item>Select shipping</item>\n        <item>By Cargo</item>\n        <item>By Ship</item>\n\n    </string-array>\n\n    <string name=\"welcome_back\">Welcome back</string>\n    <string name=\"login_with_mobile\">Log in with your email address</string>\n    <string name=\"ar\" translatable=\"false\">AR</string>\n    <string name=\"en\" translatable=\"false\">EN</string>\n    <string name=\"new_registration\">New registration</string>\n    <string name=\"don_t_have_an_account\">Don\\'t have an account?</string>\n    <string name=\"please_choose_an_account_type\">Please choose an account type</string>\n    <string name=\"already_have_an_account\">Already have an account?</string>\n    <string name=\"login\">Login</string>\n    <string name=\"invitation_code\">Invitation Code</string>\n    <string name=\"register_term\">Registering in the application means that you agree to</string>\n    <string name=\"term_condition\">Terms and Conditions</string>\n    <string name=\"activation\">Activation</string>\n    <string name=\"confirm_mobile_number\">Confirm mobile number</string>\n    <string name=\"confirm_Email\">Confirm Email</string>\n    <string name=\"sent_code\">we have sent the activation code to your phone no</string>\n    <string name=\"sent_code_email\">We have sent the activation code to your email</string>\n    <string name=\"one_step_left\">One step left!</string>\n    <string name=\"enter_your_address_name_and_age_details\">Enter your address/name /age details</string>\n    <string name=\"address_details\">Address details</string>\n    <string name=\"county_code\">County Code</string>\n    <string name=\"district\">District</string>\n    <string name=\"CompanyData\">Company Data</string>\n    <string name=\"please_enter_company_information\">Please enter company information</string>\n    <string name=\"the_company_s_name\">Company Name</string>\n    <string name=\"the_company_s_name_ar\">Company Name ar</string>\n    <string name=\"the_company_s_name_en\">Company Name en</string>\n    <string name=\"website\">Website</string>\n    <string name=\"TaxNumber\">Tax Number</string>\n    <string name=\"maroof\">Maroof</string>\n    <string name=\"download_the_commercial_registry_file\">Upload commercial registry file</string>\n    <string name=\"you_must_download_the_commercial_registry_file\">You Must Upload commercial registry file</string>\n\n    <string name=\"locating_the_company\">Company Location</string>\n    <string name=\"commercial_registration_no\">Commercial Registration No</string>\n    <string name=\"type_of_employment\">Type of employment</string>\n    <string name=\"country_code\" translatable=\"false\">Country Code</string>\n    <string name=\"expiry_date\">Expiry date</string>\n    <string name=\"youtube\">Youtube</string>\n    <string name=\"enter_your_personal_information\" translatable=\"false\">Enter your personal information</string>\n    <string name=\"sign_up\" translatable=\"false\">Sign Up</string>\n    <string name=\"it_was_completed\">It was completed</string>\n    <string name=\"negotiationPrice\">Negotiation Price</string>\n    <string name=\"price_negotiation\">Price Negotiation</string>\n    <string name=\"have_a_question\">Have a question?</string>\n    <string name=\"merchant\">Merchant</string>\n    <string name=\"password_reset\">Password Reset</string>\n    <string name=\"we_have_sent_the_activation_code_to_your_phone\">We have sent the activation code to your phone</string>\n    <string name=\"resend_the_code_after_50_seconds\" translatable=\"false\">Resend the code after: 50 seconds</string>\n    <string name=\"favorite\">Favorite</string>\n    <string name=\"purchasing_price\">Purchasing price</string>\n    <string name=\"want_to_search_for_a_commodity_or_an_auction\">Want to search for a commodity or an auction?</string>\n    <string name=\"search_by_name_auction_number_or_item\">Search by name / auction number or item</string>\n    <string name=\"Browse_our_departments\">Browse our departments</string>\n    <string name=\"lot_of_things\">Lots of auctions and goods are waiting for you</string>\n    <string name=\"auctions\">Auctions</string>\n    <string name=\"market_place\">Market Place</string>\n    <string name=\"shopping\">Shopping</string>\n    <string name=\"new_\">New</string>\n    <string name=\"vehicles\">Vehicles</string>\n    <string name=\"electronics_gaming\">Electronics &amp; Gaming</string>\n    <string name=\"property\">Property</string>\n    <string name=\"real_estate\">Real Estate</string>\n    <string name=\"electronics\">Electronics</string>\n    <string name=\"List_Auctions\">List Auctions</string>\n    <string name=\"List_Auctions_detail\">Participate in auctions or buy at the displayed price</string>\n    <string name=\"follow_news\">Follow all the news for this section</string>\n    <string name=\"result\">%s results</string>\n    <string name=\"add_product\">Add product</string>\n    <string name=\"what_is_lorem_ipsum\">What is Lorem Ipsum?</string>\n    <string name=\"enter_the_title_of_the_product_you_want_to_sell\">Enter the title of the product you want to sell</string>\n    <string name=\"phone\">phone</string>\n    <string name=\"electronics_phones\">Electronics - Phones</string>\n    <string name=\"services_mobile_phone_services\">Services - mobile phone services</string>\n    <string name=\"choose_main_category\">Choose Main Category</string>\n    <string name=\"the_next\">Next</string>\n    <string name=\"choose_subcategory\">Choose Subcategory</string>\n    <string name=\"attach_pictures_of_the_item\">Attach pictures of the item</string>\n    <string name=\"item_details\">Item details</string>\n    <string name=\"ad_details\">Ad Details</string>\n    <string name=\"item_detailsEN\">Item details in English</string>\n    <string name=\"item_detailsAR\">Item details in Arabic</string>\n    <string name=\"attach_a_video_link_of_the_item\">Attach a video link of the item</string>\n    <string name=\"reviews\">Reviews</string>\n    <string name=\"sent\">Sent</string>\n    <string name=\"received\">Received</string>\n    <string name=\"sent_to_buyers\">Sent to buyers</string>\n    <string name=\"_3_days_after_the_offer_ends\"> hours after the offer ends</string>\n    <string name=\"no_response_yet\">No response yet</string>\n    <string name=\"sent_to_sellers\">sent to sellers</string>\n    <string name=\"what_do_you_want_to_sell\">What do you want to sell?</string>\n    <string name=\"enter_the_name_of_the_product_you_want_to_sell\">What are you looking for?</string>\n    <string name=\"model_year\">Model year</string>\n    <string name=\"motion_vector\">Motion vector</string>\n    <string name=\"mileage\">Mileage</string>\n    <string name=\"type_the_item_s_title\">Type the item\\'s title</string>\n    <string name=\"type_the_item_s_subtitle\">Type the item\\'s subtitle</string>\n    <string name=\"sub_address\">Sub-address</string>\n    <string name=\"item_condition\">Item condition</string>\n    <string name=\"sale_type\">Sale type</string>\n    <string name=\"fixed_price_sale\">Fixed price sale</string>\n    <string name=\"tender\">Tender</string>\n    <string name=\"purchasing_price_\">Purchasing price</string>\n    <string name=\"payment_options\">Payment options</string>\n    <string name=\"rial\">Rial</string>\n    <string name=\"bank_transfer_2\">Bank transfer</string>\n    <string name=\"add_a_new_account\">Add a new account</string>\n    <string name=\"visa_mastercard\">VisaCard</string>\n    <string name=\"sale_details\">Sale details</string>\n    <string name=\"choose_one_of_our_special_packages\">Choose one of our special packages</string>\n    <string name=\"ExtraFee\">Additional Cost</string>\n    <string name=\"silver_package\">Silver package</string>\n    <string name=\"and_get_many_advantages_of_displaying_your_product\">And get many advantages of displaying your product</string>\n    <string name=\"distinguish_your_product\">Distinguish your product</string>\n    <string name=\"item_specification\">Item specification</string>\n    <string name=\"amendment\">Edit</string>\n    <string name=\"it_has_no_scratches\">It has no scratches</string>\n    <string name=\"quantity\">Quantity</string>\n    <string name=\"one_piece\">One piece</string>\n    <string name=\"fixed_price\">Fixed price</string>\n    <string name=\"auction_start_price\">Auction start price</string>\n    <string name=\"minimum_price\">Minimum price for closing</string>\n    <string name=\"negotiable\">Negotiable</string>\n    <string name=\"shipping\">Shipping</string>\n    <string name=\"auction_closing_time\">Auction closing time</string>\n    <string name=\"option_1\">Option #1</string>\n    <string name=\"selected_package\">Selected package</string>\n    <string name=\"a_change\">A change</string>\n    <string name=\"bronze_package\">Bronze Package</string>\n    <string name=\"do_you_have_a_discount_coupon\">Do you have a discount coupon?</string>\n    <string name=\"enter_the_coupon\">Enter the coupon</string>\n    <string name=\"invalidCoupon\">Invalid Coupon</string>\n    <string name=\"discount_coupon\">Discount coupon</string>\n    <string name=\"coupon_discount\">Coupon Discount</string>\n    <string name=\"package_cost\">Package cost</string>\n    <string name=\"additional_package_price\">Additional Package Price</string>\n    <string name=\"added_tax\">Added tax</string>\n    <string name=\"total\">Total</string>\n    <string name=\"complete_the_order\">Complete order</string>\n    <string name=\"auction_options\">Auction Options</string>\n    <string name=\"your_order_is_now_being_delivered\">Your order is now being delivered!</string>\n    <string name=\"order_number\">Order number</string>\n    <string name=\"order_status\">Order status</string>\n    <string name=\"waiting_for_confirmation\">Waiting for confirmation</string>\n    <string name=\"sar\" translatable=\"false\">SAR</string>\n    <string name=\"Rayal\">Rayal</string>\n    <string name=\"rayal\">S.R</string>\n    <string name=\"shopping_basket\">Your cart</string>\n    <string name=\"your_favorite_merchant_added_a_product\">Your favorite merchant added a product</string>\n    <string name=\"new_product_has_been_added\">New product has been added</string>\n    <string name=\"item_title\">Item title</string>\n    <string name=\"sub_title\">Item subtitle</string>\n    <string name=\"item_title_en\">Item title in english</string>\n    <string name=\"sub_title_en\">Item subtitle in english</string>\n    <string name=\"item_title_ar\">Item title in arabic</string>\n    <string name=\"sub_title_ar\">Item subtitle in arabic</string>\n\n\n    <string name=\"bank_transfer\">Bank transfer</string>\n    <string name=\"dismiss\">Dismiss</string>\n    <string name=\"enter\">Enter</string>\n    <string name=\"account_holder_s_name\">Account Holder\\'s Name</string>\n    <string name=\"bank_name\">Bank name</string>\n    <string name=\"account_number\">Account number</string>\n    <string name=\"iban\">Iban</string>\n    <string name=\"save_later\">Save for later use</string>\n    <string name=\"add_account\">Add account</string>\n    <string name=\"Please_choose_catgeory\">Please choose category</string>\n    <string name=\"select_or_search\" translatable=\"false\">Select or Search</string>\n    <string name=\"close\" translatable=\"false\">Close</string>\n    <string name=\"subtotal\">Cart total</string>\n    <string name=\"Subtotal\">Subtotal</string>\n    <string name=\"no_thank_you\">No thank you</string>\n\n    <string name=\"my_saved_addresses\">My saved addresses</string>\n    <string name=\"delivery_to_my_current_address\">Delivery to my current address</string>\n    <string name=\"add_a_new_address\">Add a new Address</string>\n    <string name=\"edit_address\">Edit Address</string>\n    <string name=\"close_time\">Please specify the auction end date</string>\n    <string name=\"without_additional_expenses\">Without additional expenses</string>\n    <string name=\"set_your_own_time_and_time\">Set your own date and time</string>\n    <string name=\"_20_riyals\">+20 riyals</string>\n    <string name=\"Golden_Package\">Golden package</string>\n    <string name=\"Silver_Package\">Silver package</string>\n    <string name=\"Bronze_Package\">Bronze package</string>\n    <string name=\"Standard_Package\">Standard package</string>\n    <string name=\"your_product_will_be_displayed_on_the_home_page\">Your product will be displayed on the home page</string>\n    <string name=\"common\">Common</string>\n    <string name=\"choose_your_payment_method\">Choose your payment method</string>\n    <string name=\"your_product_has_been_successfully_added\">Your product has been successfully added</string>\n    <string name=\"view_the_product\">View the product</string>\n    <string name=\"back_to_main\">Back to main</string>\n    <string name=\"no_tag_found\" translatable=\"false\">No tags found</string>\n    <string name=\"main_photo\">Main photo</string>\n    <string name=\"PM\">PM</string>\n    <string name=\"AM\">AM</string>\n    <string name=\"mark_main_photo\">Please mark main photo</string>\n    <string name=\"please_enter_valid\" formatted=\"true\">Please enter valid %s</string>\n    <string name=\"it_will_end\">it will end</string>\n    <string name=\"all_reviews\">All reviews</string>\n    <string name=\"add_review\">Add Review</string>\n    <string name=\"similar_products\">Similar Products</string>\n    <string name=\"view_similar_product_from_seller\">View similar product from seller</string>\n    <string name=\"hide_similar_product_from_seller\">Hide similar product from seller</string>\n    <string name=\"current_price_buy\">Buy at the current price</string>\n    <string name=\"Bid_on_price\">Bid on price</string>\n    <string name=\"add_to_cart\">Add to cart</string>\n    <string name=\"more\">More</string>\n    <string name=\"Cardno\">Card Number</string>\n    <string name=\"switch_accounts_and_business_account\">Switch accounts and business account</string>\n    <string name=\"accounts\">Accounts</string>\n    <string name=\"user_account\">User account</string>\n    <string name=\"currently_registered\">Currently registered</string>\n\n    <string name=\"Switch\">Switch</string>\n    <string name=\"business_account\">Business Account</string>\n    <string name=\"whatsapp\">WhatsApp</string>\n    <string name=\"linkedIn\">LinkedIn</string>\n    <string name=\"snapchat\">Snapchat</string>\n    <string name=\"tickTok\">TickTok</string>\n    <string name=\"search_location\">Searh Location</string>\n\n    <string name=\"key_search\" translatable=\"false\">key_search</string>\n    <string name=\"key_location\" translatable=\"false\">key_location</string>\n    <string name=\"key_latitude\" translatable=\"false\">key_latitude</string>\n    <string name=\"key_longitude\" translatable=\"false\">key_longitude</string>\n    <string name=\"key_status\" translatable=\"false\">key_status</string>\n    <string name=\"location_is_not_found\" translatable=\"false\">Location is not found.</string>\n    <string name=\"switch_accounts\">Switch Accounts</string>\n    <string name=\"upgrade_my_existing_account_to_a_merchant_account\">Upgrade my existing account to a merchant account</string>\n    <string name=\"Commercial_Record\">Commercial Record</string>\n    <string name=\"Free_work\">Free work</string>\n    <string name=\"A_favour\">A favour</string>\n    <string name=\"video_link\">Video link</string>\n    <string name=\"Choose_location\">Choose location</string>\n    <string name=\"ok\">OK</string>\n    <string name=\"alert\">Alert</string>\n    <string name=\"gps_check\">Location service is denied for the app. Allow it to use the app</string>\n    <string name=\"purchase\">Purchase</string>\n    <string name=\"Question\">Question</string>\n    <string name=\"Answer\">Answer</string>\n    <string name=\"there_are_2_questions_that_the_seller_did_not_answer\" formatted=\"true\">There are %s questions that the seller did not answer</string>\n    <string name=\"questions_and_answers\">Questions and answers</string>\n    <string name=\"price_is_negotiable\">Price is negotiable</string>\n    <string name=\"empty_cart\">Shopping Cart is Empty</string>\n    <string name=\"for_sale\">For Sale</string>\n    <string name=\"sold_out\">Sold out</string>\n    <string name=\"did_not_sell\">Did not sell</string>\n    <string name=\"request_type\">Request type</string>\n    <string name=\"order_time\">Order Time</string>\n    <string name=\"shipments\">Shipments</string>\n    <string name=\"shipments2\">Shipments</string>\n    <string name=\"total_order\">Total order</string>\n    <string name=\"view_and_complete_the_order\">View and complete the order</string>\n    <string name=\"we_are_glad_to_contact_you\">We are glad to contact you</string>\n    <string name=\"what_kind_of_help_do_you_need\">What kind of help do you need?</string>\n    <string name=\"type_of_communication\">Type of communication</string>\n    <string name=\"select_type_of_communication\">Select type of communication</string>\n    <string name=\"problem_title\">Problem title</string>\n    <string name=\"enter_problem_title\">Enter problem title</string>\n    <string name=\"message_details\">Message details</string>\n    <string name=\"send\">Send</string>\n    <string name=\"my_personal_settings\">My personal settings</string>\n    <string name=\"account_settings\">Account settings</string>\n    <string name=\"view_my_information_for_everyone\">View my information for everyone</string>\n    <string name=\"view_my_information_for_members_only\">View my information for members only</string>\n    <string name=\"no_one\">No one</string>\n    <string name=\"save_edits\">Save edits</string>\n    <string name=\"Add\">Add</string>\n    <string name=\"the_language\">The Language</string>\n    <string name=\"receive_notification\">Receive notification</string>\n    <string name=\"edit_profile\">Edit profile</string>\n    <string name=\"application_settings\">Application settings</string>\n    <string name=\"my_bids\">My Bids</string>\n    <string name=\"myBid\">My Bid</string>\n    <string name=\"negotiation_offers\">Negotiation offers</string>\n    <string name=\"offerPrice\">Offer Price</string>\n    <string name=\"save_addresses\">Save Addresses</string>\n    <string name=\"update_address\">Update Address</string>\n    <string name=\"member_since\">Member since</string>\n    <string name=\"merchant_page\">Merchant page</string>\n    <string name=\"membership_number\">Membership Number</string>\n    <string name=\"seller_information\">Seller information</string>\n    <string name=\"card_holder_s_name\">Card holder\\'s name</string>\n    <string name=\"cvv\">CVV</string>\n    <string name=\"pay_by_card\">Pay by card</string>\n    <string name=\"order_completed_successfully\">Order completed successfully</string>\n    <string name=\"track_your_order\">Follow up my order</string>\n    <string name=\"back_to_shopping\">Back To Shopping</string>\n    <string name=\"payment_cards\">Payment cards</string>\n    <string name=\"favorite_products\">Favorite Products</string>\n    <string name=\"favorite_sellers\">Favorite Sellers</string>\n    <string name=\"favorite_search\">Favorite search</string>\n    <string name=\"favorite_categories\">Favorite Categories</string>\n    <string name=\"view_new_product_for_this_search\">View new product for this search</string>\n    <string name=\"my_wallet\">My wallet</string>\n    <string name=\"my_balance\">My balance</string>\n    <string name=\"choose_the_account\">Choose the account</string>\n    <string name=\"recharge_the_balance\">Recharge the balance</string>\n    <string name=\"recent_operations\">Recent operations</string>\n    <string name=\"a_security_deposit_has_been_added_to_the_losing_auction\">A security deposit has been added to the losing auction</string>\n    <string name=\"share_the_invite_code\">Share the invite code</string>\n    <string name=\"and_get_100_points_for_every_new_store\">And get 100 points for every new store</string>\n    <string name=\"convert_points_into_credit\">Convert points into credit</string>\n    <string name=\"every_100_points_for_10_riyals\">Every 100 points for 10 riyals</string>\n    <string name=\"conversion\">Conversion</string>\n    <string name=\"_100_points_have_been_converted_into_10_riyals_to_your_wallet\">100 points have been converted into 10 riyals to your wallet</string>\n    <string name=\"membership_no\">Membership No</string>\n    <string name=\"delivery_options\">Delivery options</string>\n    <string name=\"remove_all\">Remove all</string>\n    <string name=\"al_khalis_company\">(Al Khalis Company)</string>\n    <string name=\"shipment_no_1\">Shipment No. </string>\n    <string name=\"total_charges\">Total charges</string>\n    <string name=\"update_card\">Update Card</string>\n    <string name=\"password_update\">Password has been successfully changed</string>\n    <string name=\"delivery_tax\">Delivery Tax</string>\n    <string name=\"my_requests\">My requests</string>\n    <string name=\"customer_address\">Customer address</string>\n    <string name=\"shipment_confirmation_code\">Shipment confirmation code</string>\n    <string name=\"_1_shipment\">1 . shipment</string>\n    <string name=\"delivery_phase\">Delivery phase</string>\n    <string name=\"cancel_a_shipment_order\">Cancel a shipment order</string>\n    <string name=\"my_orders\">My Orders</string>\n    <string name=\"seller_account_numbers\">Seller account numbers</string>\n    <string name=\"we_are_pleased_to_deal_with_you_through_onrav\">We are pleased to deal with you through Onrav</string>\n    <string name=\"we_are_pleased_to_deal_with_you_through_onruf\">We are pleased to deal with you through Onruf</string>\n    <string name=\"help_us_give_your_rating\">Help us give your rating</string>\n    <string name=\"what_is_your_evaluation_of_the_seller\">What is your evaluation of the seller?</string>\n    <string name=\"what_is_your_evaluation_of_the_Products\">What is your evaluation of the products?</string>\n    <string name=\"what_is_your_evaluation_of_the_shipment\">What is your evaluation of the shipment?</string>\n    <string name=\"do_you_have_a_comment\">Do you have a comment?</string>\n    <string name=\"your_rating_for_the_product\">Your rating for the product</string>\n    <string name=\"your_rating_for_shipping\">Your rating for shipping</string>\n    <string name=\"send_evaluation\">Send evaluation</string>\n    <string name=\"to_be_sure\">To be sure</string>\n    <string name=\"please_attach_a_copy_of_the_invoice\">Please attach a copy of the invoice</string>\n    <string name=\"attach_the_picture\">Attach the picture</string>\n    <string name=\"highest_price\">Highest Price</string>\n    <string name=\"bidding_completed_successfully\">Bidding completed successfully</string>\n    <string name=\"manage_your_bid\">Manage Your Bid</string>\n    <string name=\"seller\">Seller</string>\n    <string name=\"_4_9_from_00_visitors\" formatted=\"true\">%s from %s visitors</string>\n    <string name=\"profile_picture\">Profile picture</string>\n    <string name=\"upload_photo\">Upload photo</string>\n    <string name=\"activate_automatic_bidding\">Activate automatic bidding</string>\n    <string name=\"bid_start_price\">Bid start price</string>\n    <string name=\"participate_in_the_auction\">Participate in the auction</string>\n    <string name=\"bid_value\">Bid value</string>\n    <string name=\"Sale\">Sale</string>\n    <string name=\"Loser\">Lost</string>\n    <string name=\"help\">Help</string>\n    <string name=\"technical_support\">Technical support</string>\n    <string name=\"follow_up\">Follow-up</string>\n    <string name=\"my_points\">My points</string>\n    <string name=\"sale\">Sale</string>\n    <string name=\"free_delivery\">Free delivery</string>\n    <string name=\"invoice_download\">Invoice download</string>\n    <string name=\"shipment_evaluation\">Shipment evaluation</string>\n    <string name=\"payment_when_recieving\">Payment when recieving</string>\n    <string name=\"by_the_bank\">By the bank</string>\n    <string name=\"shipping_and_payment_options\">Shipping and payment options</string>\n    <string name=\"free_delivery_inside_the_kingdom\">Free delivery inside the kingdom</string>\n    <string name=\"received_from_sellers\">Received from sellers</string>\n    <string name=\"received_from_buyers\">Received from buyers</string>\n    <string name=\"product_reviews\">Product Reviews</string>\n    <string name=\"results\">Results</string>\n    <string name=\"reset\">Reset</string>\n    <string name=\"activate_email\">Activate Email</string>\n    <string name=\"add_a_new_category\">Add a new category</string>\n    <string name=\"choose_the_category_you_prefer_to_receive_all_new_about_it\">Choose the category you prefer to receive all new about it</string>\n    <string name=\"balance_withdrawal\">Balance withdrawal</string>\n    <string name=\"favorite_subcategories\">Favorite subcategories</string>\n    <string name=\"filter_application\">Filter application</string>\n    <string name=\"reviews_type\">Reviews type</string>\n    <string name=\"reviews_as\">Reviews as</string>\n    <string name=\"reviews_as_a_seller\">Reviews as a seller</string>\n    <string name=\"reviews_as_a_buyer\">Reviews as a buyer</string>\n    <string name=\"following\">Following</string>\n    <string name=\"sub_categories\">Sub Categories</string>\n    <string name=\"region\">Region</string>\n    <string name=\"specifications\">Specifications</string>\n    <string name=\"follow_catgeory\">Follow category successfully</string>\n\n\n    <string name=\"in_\" translatable=\"false\">in</string>\n    <array name=\"initial_slider_values\">\n        <item>0</item>\n        <item>0</item>\n    </array>\n    <string name=\"integratedShippingCompanies\">Integrated Shipping Companies</string>\n    <string name=\"free_shipping_within_Saudi_Arabia\">Free shipping within Saudi Arabia</string>\n    <string name=\"arrangementWillBeMadeWithTheBuyer\">Arrangement Will Be Made With The Buyer</string>\n    <string name=\"noPackagesFound\">No Packages Found</string>\n    <string name=\"notSpecified\">Not Specified</string>\n    <string name=\"inArabic\">In Arabic</string>\n    <string name=\"inEnglish\">In English</string>\n    <string name=\"album\">Album</string>\n    <string name=\"str_all_view\">All view</string>\n    <string name=\"no_Reviews_Found\">No Reviews Found</string>\n    <string name=\"add_Review\">Add Review</string>\n    <string name=\"enterComment\">Enter Comment</string>\n    <string name=\"addyourAnswer\">Add your answer</string>\n    <string name=\"addDiscount\">Add Discount</string>\n    <string name=\"modifyProduct\">Edit Product</string>\n    <string name=\"deleteProduct\">Delete Product</string>\n    <string name=\"discount\">Discount</string>\n    <string name=\"discountEndTime\">Discount End Time</string>\n    <string name=\"addDiscountEndTime\">Add Discount End Time</string>\n    <string name=\"discountPriceShouldBeLower\">Discount price should be Lower than current price</string>\n    <string name=\"discountAddedSuccessfully\">Discount was added Successfully</string>\n    <string name=\"sellerRate\">Seller Rates</string>\n    <string name=\"rateBuyer\">Rate Buyer</string>\n    <string name=\"noAddressesFound\">No Addresses Found</string>\n    <string name=\"building\">Building</string>\n    <string name=\"floor\">Floor</string>\n    <string name=\"floorNumber\">Floor Number</string>\n    <string name=\"apartmentNumber\">Apartment Number</string>\n    <string name=\"apartment\">Apartment</string>\n    <string name=\"addressTitle\">Address Title</string>\n    <string name=\"address\">Address</string>\n    <string name=\"addresses\">Addresses</string>\n    <string name=\"street\">Street</string>\n    <string name=\"buildingNumber\">Building Number</string>\n    <string name=\"openLocation\">Please open  location permission</string>\n    <string name=\"open\">Open</string>\n    <string name=\"plaseSelectYourLocation\">Please Select Your Location</string>\n    <string name=\"selectLocation\">Select Location</string>\n    <string name=\"productAddedToCart\">Product  Was Added To Your Cart</string>\n    <string name=\"selectDeliveryAddress\">Please, Select Delivery Address</string>\n    <string name=\"noLocationFound\">No Location Found</string>\n    <string name=\"showLess\">Show Less</string>\n    <string name=\"order_details\">Order Details</string>\n    <string name=\"clientAddress\">Client Address</string>\n    <string name=\"billOfLading\">Bill Of Lading</string>\n    <string name=\"rateShipment\">Rate Shipment</string>\n    <string name=\"selectSellerRate\">Select Seller Rate</string>\n    <string name=\"addComment\">Add Comment</string>\n    <string name=\"selectShipmentRate\">Select Shipment Rate</string>\n    <string name=\"addAllProductsRates\">Add All Products Rates Data</string>\n    <string name=\"happy\">Happy</string>\n    <string name=\"satisfied\">Satisfied</string>\n    <string name=\"unsatisfied\">Unsatisfied</string>\n    <string name=\"enterAmount\">Enter Amount</string>\n    <string name=\"suggestions\">Suggestions</string>\n    <string name=\"complaint\">Complaint</string>\n    <string name=\"changeOrderStatus\">Change Order Status</string>\n\n    <string name=\"order_new\">New Order</string>\n    <string name=\"order_productsProcessing\">Products Processing</string>\n    <string name=\"order_deliveryPhase\">Delivery Phase</string>\n    <string name=\"order_deliveryConfirmation\">Delivery Confirmation</string>\n    <string name=\"order_canceledBySeller\">Canceled By Seller</string>\n    <string name=\"noAccountFound\">No Accounts Found</string>\n    <string name=\"userNameExists\">User Name Exists</string>\n    <string name=\"userEmailExists\">Email Exists</string>\n    <string name=\"userPhoneExists\">Phone Number Exists</string>\n    <string name=\"takePhoto\">Take Photo</string>\n    <string name=\"deletePhoto\">Delete Photo</string>\n    //====attach file dialog\n    <string name=\"addFiles\">Add file</string>\n    <string name=\"selectImage\">Select Image</string>\n    <string name=\"selectFile\">Select File PDF</string>\n    <string name=\"pickRightImage\">Please choose the image again</string>\n    <string name=\"error_happened\">Error happened</string>\n    <string name=\"notsupportedExtension\">Not supported file.</string>\n    <string name=\"noApp\">There is no app to open this file.</string>\n    <string name=\"fromCamera\">From Camera</string>\n    <string name=\"fromGallery\">From Gallery</string>\n    <string name=\"commercialRegister\">Commercial Register</string>\n    <string name=\"freelanceCertificate\">Freelance Certificate</string>\n    <string name=\"registrationNumberExpiryDate\">Registration Number Expiry Date</string>\n    <string name=\"Trade15Years\">Trade 15 Years</string>\n    <string name=\"changePassword\">Change Password</string>\n    <string name=\"passwordUpdatedSuccessfully\">Password Updated Successfully</string>\n    <string name=\"emailUpdatedSuccessfully\">Email Updated Successfully</string>\n    <string name=\"phoneUpdatedSuccessfully\">Phone Updated Successfully</string>\n    <string name=\"wrongPassword\">Wrong Password</string>\n    <string name=\"passwordReset\">password Reset</string>\n    <string name=\"TypeNewPassword\">Type New Password</string>\n    <string name=\"updateYourEmail\">Update Your Email</string>\n    <string name=\"profileUpdatedSuccessfully\">Profile updated successfully</string>\n    <string name=\"statusShowingYourData\">Select status of showing your data</string>\n    <string name=\"swiftCode\">Swift Code</string>\n    <string name=\"checkYourDataForamt\">Check your data format</string>\n    <string name=\"cashPayment\">Cash payment</string>\n    <string name=\"selectBackAccount\">Select bank account</string>\n    <string name=\"freeProductImagesCount\">Free product images count</string>\n    <string name=\"freeProductVidoesCount\">Free product videos count</string>\n    <string name=\"extraProductImageFee\">Extra product image fee</string>\n    <string name=\"extraProductVidoeFee\">Extra product video fee</string>\n    <string name=\"extraProductImageCount\">Extra product image count</string>\n    <string name=\"extraProductVidoeCount\">Extra product video count</string>\n    <string name=\"subTitleFee\">Sub title fee</string>\n    <string name=\"arabic_subtitle_fees\">Arabic Subtitle Fees</string>\n    <string name=\"day\">Day</string>\n    <string name=\"week\">Week</string>\n    <string name=\"month\">Month</string>\n    <string name=\"increaseForEachTime\">Increase For Each Time</string>\n    <string name=\"writeIncreaseForEachTime\">Write Increase For Each Time</string>\n    <string name=\"highestBidPrice\">Highest Bid Price</string>\n    <string name=\"writeHighestBidPrice\">Write Highest Bid Price</string>\n    <string name=\"fixedPriceFee\">Fixed Price Fee</string>\n    <string name=\"fixed_sale_price_option_fees\">Fixed Sale Price Option Fees</string>\n    <string name=\"auctionFee\">Auction Fee</string>\n    <string name=\"public_auction_option_fees\">Public Auction Option Fees</string>\n    <string name=\"negotiationFee\">Negotiation Fee</string>\n    <string name=\"negotiable_price_option_fees\">Negotiable Price Option Fees</string>\n    <string name=\"imageExtraFee\">Extra Images Fee</string>\n    <string name=\"additional_image_fees\">Additional Image Fees</string>\n    <string name=\"videoExtraFee\">Extra Videos Fee</string>\n    <string name=\"additional_video_link_fees\">Additional Video Link Fees</string>\n    <string name=\"SubTitleFee\">Subtitle Fee</string>\n    <string name=\"ad_publishing_fees\">Ad Publishing Fees</string>\n    <string name=\"productPublishPrice\">Product Publish Price</string>\n\n    <string name=\"enterBidPrice\">Enter Bid Price</string>\n    <string name=\"enterCorrectBidPrice\">Enter Correct Bid Price</string>\n    <string name=\"writeNegotionPrice\">Please type the price you want to send to the seller</string>\n    <string name=\"writeNegotiationPrice2\">Write Negotiation Price</string>\n    <string name=\"negotiationPriceSent\">Negotiation Price Sent</string>\n\n    <string name=\"followNegotiationsOffers\">Manage Offer</string>\n    <string name=\"noOffersFound\">No Offers Found</string>\n    <string name=\"noResponse\">No Response</string>\n    <string name=\"waitForYourResponse\">New</string>\n    <string name=\"acceptNegotiationsOffers\">Accept Negotiation Offer</string>\n    <string name=\"rejectNegotiationsOffers\">Reject Negotiation Offer</string>\n    <string name=\"OfferCanceled\">Offer Canceled</string>\n    <string name=\"accept\">Accept</string>\n    <string name=\"reject\">Reject</string>\n    <string name=\"selectExpirationHours\">Please select expiration hours</string>\n    <string name=\"refuseReason\">Refuse Reason</string>\n    <string name=\"accepted\">Accepted</string>\n    <string name=\"rejected\">Rejected</string>\n    <string name=\"sendOffer\">Send Offer</string>\n    <string name=\"offerSent\">Offer Sent</string>\n    <string name=\"repostTheProduct\">Repost The Product</string>\n    <string name=\"user\">User</string>\n    <string name=\"selectUser\">Select User</string>\n    <string name=\"you\">You</string>\n    <string name=\"errorEmail\">The entered email is not registered in our system</string>\n    <string name=\"titleForget\">Enter your email and we\\'ll send password reset instructions</string>\n    <string name=\"select_gender\">don\\'t  save  data  with out choose  gender   </string>\n    <string name=\"enterNewPhone\">Please enter new number to reset</string>\n    <string name=\"enterNewEmail\">Please enter new email address to reset</string>\n    <string name=\"doneAdd\">Added</string>\n    <string name=\"totalCard\">Cart total</string>\n    <string name=\"goCart\">Go to cart</string>\n    <string name=\"goFollowing\">Go shopping</string>\n    <string name=\"rates\">Ratings</string>\n    <string name=\"dataAlreadyExit\">The data already exists before</string>\n    <string name=\"highestPrice\">Highest Price: </string>\n    <string name=\"doneCategory\">Done</string>\n    <string name=\"saveDone\">This search has been saved</string>\n    <string name=\"creditCard\">VisaCard</string>\n    <string name=\"MadaPayment\">Mada</string>\n    <string name=\"WaitingForPayment\">Waiting for payment</string>\n    <string name=\"InProgress\">In Progress</string>\n    <string name=\"withoutCharging\">Without Charging</string>\n    <string name=\"confirmed\">Confirmed</string>\n    <string name=\"unactivate\">Unactivate</string>\n    <string name=\"canceled\">Boiled</string>\n    <string name=\"WaitingForReview\">Waiting for review</string>\n    <string name=\"ReadyForDelivery\">Ready for delivery</string>\n    <string name=\"DeliveryInProgress\">Delivery in progress</string>\n    <string name=\"Delivered\">Delivered</string>\n    <string name=\"Retrieved\">Retrieved</string>\n    <string name=\"doneRate\">Effectively rated, thank you</string>\n    <string name=\"removeProductSuccessfully\">The active product has been deleted</string>\n    <string name=\"highauction\">Highest bid</string>\n    <string name=\"lowAuction\">Lowest increment</string>\n    <string name=\"deleteAuction\">Delete auction</string>\n    <string name=\"cars_real_estate_animals\">Cars, Real estate, Animals...</string>\n    <string name=\"bankName\">\"Bank Name : \"</string>\n    <string name=\"accountNumber\">\"Account Number : \"</string>\n    <string name=\"userName\">\"Card holder's name : \"</string>\n    <string name=\"iban_number\">\"Iban : \"</string>\n    <string name=\"cancel_the_order\">Cancel the order</string>\n    <string name=\"your_rating_for_the_buyer\">What is your rating for the buyer</string>\n    <string name=\"add_Review_success\">Evaluation completed successfully</string>\n    <string name=\"noFoundUserOffers\">No users to select</string>\n    <string name=\"viewCategory\">View</string>\n    <string name=\"visitors\">الزائرين</string>\n    <string name=\"deleteall\">إزالة الكل</string>\n    <string name=\"CheckoutProduct\">Checkout</string>\n    <string name=\"editProduct\">Edit Product</string>\n    <string name=\"_discount\">\"Discount : \"</string>\n    <string name=\"purchaseOrder\">Purchase order times</string>\n    <string name=\"QuentitiyClosed\">Quantity Closed</string>\n    <string name=\"numMonth\">Number Of Monthes</string>\n    <string name=\"countImage\">Count Of Image</string>\n    <string name=\"countVideo\">Count Of Video</string>\n    <string name=\"productPosition\">Product Position</string>\n    <string name=\"showSupTitle\">Show SupTitle</string>\n    <string name=\"showHighLight\">Show HighLight</string>\n    <string name=\"expired\">Expired</string>\n    <string name=\"productPriceRequire\">not found product price</string>\n    <string name=\"regexPassword\">password must contain 6 characters at least it should contains numbers and letters</string>\n    <string name=\"convert\">Convert</string>\n    <string name=\"Recentـtransaction\">Recent transaction</string>\n    <string name=\"enterAmountPoint\">Please enter number of points</string>\n    <string name=\"msgShowCode\">You can register using this code</string>\n    <string name=\"cannotWithdrawal\">\" can't be withdrawal value more than available balance\"</string>\n    <string name=\"typingTwoLetter\">Please Typing (minimum 2 letter) in </string>\n    <string name=\"notAbleToApplyDiscount\">Not able to apply discount</string>\n\n    <string name=\"Usernamemusthaveatleast2characters\">\n    The username must have at least two characters\n      </string>\n    <string name=\"enterAmountPointLess\">Please enter emount point less than balance</string>\n    <string name=\"questions_is_turned_off_by_the_seller\">Questions is turned off by the seller</string>\n    <string name=\"notSelect\">Not selected</string>\n    <string name=\"SelectFixedType\">Select a fixed price type option first</string>\n    <string name=\"add_english_info\">Add English Info</string>\n    <string name=\"auction\">Auction</string>\n    <string name=\"Negotiation\">Negotiation</string>\n    <string name=\"personal\">Personal</string>\n    <string name=\"Lost\">Lost</string>\n    <string name=\"cancel_order\">Cancel Order</string>\n    <string name=\"sold_out_quantity\">Quantity %1$d of %3$s is sold out. Remaining product: %2$d, hurry up and buy it!</string>\n    <string name=\"notFoundQuantity\">Not found quantity</string>\n    <string name=\"sale_type_\">Sale Type : </string>\n    <string name=\"prevent_quantity\">quantity not available</string>\n    <string name=\"please_delivery_options\">Please , Select delivery option</string>\n    <string name=\"please_payment_options\">Please , Select payment option</string>\n    <string name=\"continue_to_shopping\">Continue Shopping</string>\n    <string name=\"product_price_sar\">%1$s SAR</string>\n    <string name=\"offer_price_sar\">Offer Price %1$s SAR</string>\n    <string name=\"qty\">Quantity:</string>\n    <string name=\"downloading\">Downloading %1$s</string>\n    <string name=\"please_wait\">Please wait…</string>\n    <string name=\"error_cannot_download_from_the_provided_link\">Cannot download from the provided link.</string>\n    <string name=\"error_invalid_url\">Invalid URL. Please check the link.</string>\n    <string name=\"error_network_issue\">Network issue. Please check your connection.</string>\n    <string name=\"error_connection_timeout\">Connection timed out. Please try again.</string>\n    <string name=\"error_io_exception\">I/O error: %1$s</string>\n    <string name=\"error\">Error: %1$s</string>\n    <string name=\"view_all\">View all</string>\n    <string name=\"choose_category\">Choose Category</string>\n    <string name=\"required_label\">Required</string>\n    <string name=\"the_selected_url_is_not_available_or_is_empty\">The selected URL is not available or is empty.</string>\n    <string name=\"cancel\">Cancel</string>\n    <string name=\"change_default_address\">Are you sure to change the default address</string>\n    <string name=\"is_default_address\">Is default address</string>\n    <string name=\"street_name_and_number\">Street Name and Number</string>\n    <string name=\"address_name\">Address Name</string>\n\n    <string name=\"download_started\">Download started…</string>\n    <string name=\"error_too_many_redirects\">Too many redirects. Please try again later.</string>\n    <string name=\"error_redirect_without_location\">Redirect failed. No valid download link found.</string>\n    <string name=\"error_failed_download\">Failed to download the file. Server response code: %1$d</string>\n    <string name=\"error_unexpected\">Unexpected error occurred: %1$s</string>\n\n    <string name=\"this_link_already_exists\">This link already exists</string>\n    <string name=\"you_can_upload_images_and_video_links_for_free_each_additional_image_costs_and_each_additional_link_costs\">You Can Upload %1$s Images And %2$s Video Links For Free Each Additional Image Costs %3$s, And Each Additional Link Costs %4$s</string>\n    <string name=\"upload_free_images\">You can upload %1$d Images for free</string>\n    <string name=\"upload_free_videos\">You can upload %1$d Video Links for free</string>\n    <string name=\"upload_free_images_and_videos\">You can upload %1$d Images and %2$d Video Links for free</string>\n    <string name=\"additional_image_fee\">Each additional image costs %1$s</string>\n    <string name=\"additional_video_fee\">Each additional link costs %1$s</string>\n    <string name=\"without_fees\">Without fees</string>\n    <string name=\"please_note_that_adding_an_arabic_subtitle_to_your_product_ad_will_cost_you\">Please Note That Adding An Arabic Subtitle To Your Product Ad Will Cost You %1$s.</string>\n    <string name=\"please_note_that_activating_it_will_cost_you\">Please Note That Activating it Will Cost You %1$s.</string>\n    <string name=\"closing_time_option\">Auction Closing Time Option (Set your own date and time)</string>\n    <string name=\"add_photos\">Add Photos</string>\n    <string name=\"ad_display_priority\">Ad Display Priority</string>\n    <string name=\"star_ruf\">Star Ruf</string>\n    <string name=\"moon_ruf\">Moon Ruf</string>\n    <string name=\"cloud_ruf\">Cloud Ruf</string>\n    <string name=\"larger_ad_size\">Larger Ad Size</string>\n    <string name=\"unavailable\">N/A</string>\n    <string name=\"payment_method\">Payment method</string>\n    <string name=\"visa_card\">Visa Card</string>\n    <string name=\"visa_credit_card\">Visa /Credit Card</string>\n    <string name=\"add_new\">Add New</string>\n    <string name=\"card_holders_name\">Card Holder’s Name</string>\n    <string name=\"card_number\">Card Number</string>\n    <string name=\"choose_another_card\">choose another card</string>\n    <string name=\"please_enter_cvv\">Please enter CVV</string>\n    <string name=\"the_points_balance_equals\">The Points balance equals %1$s</string>\n    <string name=\"the_wallet_balance_equals\">The wallet balance equals %1$s</string>\n    <string name=\"please_activate_at_least_one_payment_method\">Please activate at least one payment method</string>\n    <string name=\"please_activate_at_least_one_payment_options\">Please activate at least one payment options</string>\n    <string name=\"mm_yyyy\">MM/YYYY</string>\n    <string name=\"expiry_date_passed\">Expiry date has passed</string>\n    <string name=\"invalid_date_format\">Invalid date format (MM/YYYY, months from 01 to 12)</string>\n    <string name=\"card_number_must_be_16_digits\">Card number must be at least 16 numbers</string>\n    <string name=\"please_note_that_choosing_a_custom_date_for_the_auction_closing_time_will_cost_you\">Please Note That Choosing A Custom Date For The Auction Closing Time Will Cost You %1$s.</string>\n    <string name=\"points_balance_equals\">The Points balance equals %1$s</string>\n    <string name=\"balance_insufficient\">The Balance is insufficient to complete the payment. Please select an alternative payment method.</string>\n    <string name=\"please_select_pickup_option\">Please select a pickup option</string>\n    <string name=\"featured\">Featured</string>\n    <string name=\"please_choose_a_card\">Please choose a card</string>\n    <string name=\"tax_15\">Tax (15%)</string>\n  <string name=\"closing_soon\">Closing Soon</string>\n  <string name=\"manage\">Manage</string>\n\n    <string name=\"a_fee_of_riyals_will_be_added_for_the_cash_payment_service\">A fee of %1$s riyals will be added for the cash payment service.</string>\n    <string name=\"cash_payment_fees\">Cash Payment Fees</string>\n    <string name=\"cash\">Cash</string>\n  <string name=\"done\">Done</string>\n  <string name=\"complete_payment_instruction\">\n    Please complete the payment process by uploading the bank transfer receipt by clicking on the \"Track My Orders\" button.\n</string>\n\n    <string name=\"closing_soon\">Closing Soon</string>\n    <string name=\"there_are_no_cards_saved\">There are no cards saved، \\n Please add a new card by clicking the (Add new card) button or choose another payment method</string>\n    <string name=\"choose_card\">Choose card</string>\n    <string name=\"convert_to_points\">Convert credit</string>\n    <string name=\"convert_wallet_into_points\">Convert credit wallet into points</string>\n    <string name=\"auction_closing_option_fees\">Auction Closing Time Option Fees</string>\n</resources>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision ed94b5164f5e02bc4f25acc2e784abfa46af5293)
+++ b/app/src/main/res/values/strings.xml	(date 1747708549631)
@@ -1413,7 +1413,6 @@
     Please complete the payment process by uploading the bank transfer receipt by clicking on the "Track My Orders" button.
 </string>
 
-    <string name="closing_soon">Closing Soon</string>
     <string name="there_are_no_cards_saved">There are no cards saved، \n Please add a new card by clicking the (Add new card) button or choose another payment method</string>
     <string name="choose_card">Choose card</string>
     <string name="convert_to_points">Convert credit</string>
Index: app/src/main/java/com/malqaa/androidappp/newPhase/presentation/adapterShared/DidNotSaleAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.malqaa.androidappp.newPhase.presentation.adapterShared\n\nimport android.annotation.SuppressLint\nimport android.content.Context\nimport android.graphics.Paint\nimport android.os.Build\nimport android.os.Handler\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.annotation.RequiresApi\nimport androidx.core.content.ContextCompat\nimport androidx.recyclerview.widget.RecyclerView\nimport com.malqaa.androidappp.R\nimport com.malqaa.androidappp.databinding.ProductItemBinding\nimport com.malqaa.androidappp.newPhase.data.network.service.SetOnProductItemListeners\nimport com.malqaa.androidappp.newPhase.domain.models.productResp.Product\nimport com.malqaa.androidappp.newPhase.utils.ConstantObjects\nimport com.malqaa.androidappp.newPhase.utils.Extension\nimport com.malqaa.androidappp.newPhase.utils.Extension.shared\nimport com.malqaa.androidappp.newPhase.utils.HelpFunctions\nimport com.malqaa.androidappp.newPhase.utils.HelpFunctions.Companion.getDifference\nimport com.malqaa.androidappp.newPhase.utils.hide\nimport com.malqaa.androidappp.newPhase.utils.isValidPrice\nimport com.malqaa.androidappp.newPhase.utils.show\nimport com.yariksoffice.lingver.Lingver\nimport java.time.LocalDateTime\nimport java.time.format.DateTimeFormatter\n\nclass DidNotSaleAdapter\n    (var productList: List<Product>,\n     private var setOnProductItemListeners: SetOnProductItemListeners,\n     var categoryId: Int = 0,\n     private var isHorizontal: Boolean,\n     private var isMyProduct: Boolean = false\n) : RecyclerView.Adapter<DidNotSaleAdapter.SellerProductViewHolder>()  {\n    lateinit var context: Context\n    private var handler: Handler? = null\n    private var runnable: Runnable? = null\n    private val INTERVAL: Long = 1000L // 1 second in milliseconds\n\n    class SellerProductViewHolder(var viewBinding: ProductItemBinding) :\n        RecyclerView.ViewHolder(viewBinding.root)\n\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): SellerProductViewHolder {\n        context = parent.context\n        return SellerProductViewHolder(\n            ProductItemBinding\n                .inflate(LayoutInflater.from(parent.context), parent, false)\n        )\n    }\n\n    fun onDestroyHandler() {\n        handler?.removeCallbacks(runnable!!)\n        handler = null\n        runnable = null\n    }\n\n    override fun getItemCount(): Int = productList.size\n\n    @RequiresApi(Build.VERSION_CODES.O)\n    @SuppressLint(\"SetTextI18n\")\n    override fun onBindViewHolder(holder: SellerProductViewHolder, position: Int) {\n        val product = productList[position]\n\n        // Handle horizontal or vertical layout based on the flag\n        if (isHorizontal) {\n            val params: ViewGroup.LayoutParams = holder.viewBinding.fullview.layoutParams\n            params.width = context.resources.getDimension(R.dimen._220sdp).toInt()\n            holder.viewBinding.fullview.layoutParams = params\n        }\n\n        // Handle visibility of free delivery and merchant buttons\n        holder.viewBinding.btnFreeDelivery.visibility =\n            if (product.isFreeDelivery) View.VISIBLE else View.GONE\n        holder.viewBinding.btnMerchant.visibility =\n            if (product.isMerchant) View.VISIBLE else View.GONE\n\n        if (product.isFeatured){\n            holder.viewBinding.linearLayoutFeatured.visibility = View.VISIBLE\n            holder.viewBinding.borderId.setBackgroundResource(R.drawable.orange_border) // أو null\n        }\n        else{\n            holder.viewBinding.linearLayoutFeatured.visibility = View.GONE\n            holder.viewBinding.borderId.background = null\n        }\n\n        if (product.createdAt!!.isEmpty()){\n            holder.viewBinding.dateTv.visibility = View.GONE\n        }\n        else{\n            holder.viewBinding.dateTv.visibility = View.VISIBLE\n            val outputFormatter = DateTimeFormatter.ofPattern(\"d/MM/yyyy\")\n            val dateTime = LocalDateTime.parse(product.createdAt.toString(), DateTimeFormatter.ISO_LOCAL_DATE_TIME)\n\n            holder.viewBinding.dateTv.text = dateTime.format(outputFormatter).toString()\n        }\n\n        holder.viewBinding.imageViewShare.setOnClickListener {\n            context.shared(shareBody = \"http://advdev-001-site1.dtempurl.com/Home/GetProductById?id=${product.id}\")\n        }\n\n        // Handle favorite or settings icon based on product ownership\n\n        holder.viewBinding.ivSetting.visibility = View.VISIBLE\n        holder.viewBinding.ivSetting.setOnClickListener {\n            setOnProductItemListeners.onShowMoreSetting(\n                position,\n                product.id,\n                categoryId\n            )\n        }\n\n\n        // Handle localization for time bar background\n        holder.viewBinding.containerTimeBar.background =\n            ContextCompat.getDrawable(\n                context,\n                if (Lingver.getInstance().getLanguage() == ConstantObjects.ARABIC)\n                    R.drawable.product_attribute_bg1_ar else R.drawable.product_attribute_bg1_en\n            )\n\n        // Set product title and subtitle\n        holder.viewBinding.titlenamee.text = product.name ?: \"\"\n\n        val subtitle = product.subTitle\n        holder.viewBinding.subTitlenamee.text = subtitle ?: \"\"\n        holder.viewBinding.subTitlenamee.visibility =\n            if (subtitle.isNullOrBlank()) View.GONE else View.VISIBLE\n\n        holder.viewBinding.cityTv.text = product.regionName ?: \"\"\n\n        // Auction and Negotiation flags\n        holder.viewBinding.typeProduct.text = when {\n            product.isAuctionEnabled -> context.getString(R.string.auction)\n            product.isNegotiationEnabled -> context.getString(R.string.Negotiation)\n            else -> \"\"\n        }\n\n        // Load product image\n        val imageUrl =\n            if (!product.productImage.isNullOrEmpty()) product.productImage else product.image\n        Extension.loadImgGlide(\n            context,\n            imageUrl ?: \"\",\n            holder.viewBinding.productimg,\n            holder.viewBinding.loader\n        )\n\n        // Handle product price and discounts\n        val price = product.price\n        val priceDisc = product.priceDisc ?: product.priceDiscount\n\n        // Check if price and discount values are valid\n        if (price.isValidPrice() && priceDisc.isValidPrice()) {\n            val priceValue = price.toDouble()\n            val priceDiscValue = priceDisc.toDouble()\n\n            if (priceValue == priceDiscValue) {\n                holder.viewBinding.tvProductPrice.text =\n                    \"$priceValue ${context.getString(R.string.SAR)}\"\n                holder.viewBinding.tvOldPRiceProductPriceForVertiaclView.visibility = View.GONE\n                holder.viewBinding.tvOldPRiceProductPriceForHorizentalView.visibility = View.GONE\n            } else {\n                if (isHorizontal) {\n                    holder.viewBinding.tvOldPRiceProductPriceForHorizentalView.visibility =\n                        View.VISIBLE\n                    holder.viewBinding.tvOldPRiceProductPriceForHorizentalView.paintFlags =\n                        holder.viewBinding.tvOldPRiceProductPriceForHorizentalView.paintFlags or Paint.STRIKE_THRU_TEXT_FLAG\n                    holder.viewBinding.tvOldPRiceProductPriceForHorizentalView.text =\n                        \"$priceValue ${context.getString(R.string.SAR)}\"\n                    holder.viewBinding.tvProductPrice.text =\n                        \"$priceDiscValue ${context.getString(R.string.SAR)}\"\n                } else {\n                    holder.viewBinding.tvOldPRiceProductPriceForVertiaclView.visibility =\n                        View.VISIBLE\n                    holder.viewBinding.tvOldPRiceProductPriceForVertiaclView.paintFlags =\n                        holder.viewBinding.tvOldPRiceProductPriceForVertiaclView.paintFlags or Paint.STRIKE_THRU_TEXT_FLAG\n                    holder.viewBinding.tvOldPRiceProductPriceForVertiaclView.text =\n                        \"$priceValue ${context.getString(R.string.SAR)}\"\n                    holder.viewBinding.tvProductPrice.text =\n                        \"$priceDiscValue ${context.getString(R.string.SAR)}\"\n                }\n            }\n        } else {\n            // Hide views if price or discount is not valid\n            holder.viewBinding.purchaseContainer.visibility = View.GONE\n        }\n\n        // Show/hide auction start or highest bid price\n        val priceVisibility = when {\n            product.highestBidPrice.toDouble() > 0 -> {\n                holder.viewBinding.LowestPrice.text =\n                    \"${product.highestBidPrice} ${context.getString(R.string.SAR)}\"\n                View.VISIBLE\n            }\n\n            product.auctionStartPrice.toDouble() > 0 -> {\n                holder.viewBinding.LowestPrice.text =\n                    \"${product.auctionStartPrice} ${context.getString(R.string.SAR)}\"\n                View.VISIBLE\n            }\n\n            else -> View.INVISIBLE\n        }\n\n        holder.viewBinding.LowestPriceLayout.visibility = priceVisibility\n        holder.viewBinding.divider4.visibility = priceVisibility\n\n        // Click listeners for product item and favorite icon\n        holder.viewBinding.fullview.setOnClickListener {\n            setOnProductItemListeners.onProductSelect(position, product.id, categoryId)\n        }\n        holder.viewBinding.ivFav.setOnClickListener {\n            setOnProductItemListeners.onAddProductToFav(position, product.id, categoryId)\n        }\n\n        // Auction countdown logic\n        if (!product.auctionClosingTime.isNullOrEmpty() && !product.auctionClosingTime.contains(\"T00:00:00\")) {\n            val dateTime = LocalDateTime.parse(product.auctionClosingTime, DateTimeFormatter.ISO_LOCAL_DATE_TIME)\n\n\n            val day = dateTime.dayOfMonth.toString().padStart(2, '0')\n            val hour = dateTime.hour.toString().padStart(2, '0')\n            val minute = dateTime.minute.toString().padStart(2, '0')\n            val second = dateTime.second.toString().padStart(2, '0')\n\n            holder.viewBinding.daysTv.text = day\n            holder.viewBinding.hoursTv.text = hour\n            holder.viewBinding.minutesTv.text = minute\n            holder.viewBinding.secondsTv.text = second\n        } else {\n            holder.viewBinding.containerTimeBar.visibility = View.GONE\n            onDestroyHandler() // Stop handler if the countdown is not needed\n        }\n    }\n\n    override fun onViewRecycled(holder: SellerProductViewHolder) {\n        super.onViewRecycled(holder)\n        onDestroyHandler()  // Stops the countdown when the view is recycled\n    }\n\n\n    private fun startCountdown(holder: SellerProductViewHolder, auctionClosingTime: String) {\n        // Avoid creating a new handler if one is already running\n        if (handler != null && runnable != null) {\n            return\n        }\n\n        handler = Handler()\n        runnable = object : Runnable {\n            override fun run() {\n                holder.viewBinding.containerTimeBar.show()\n                val endDate = HelpFunctions.getAuctionClosingTimeByDate(auctionClosingTime)\n                if (endDate != null) {\n                    getDifference(\n                        auctionClosingTime,\n                        holder.viewBinding.containerTimeBar,\n                        holder.viewBinding.titleDay,\n                        holder.viewBinding.daysTv,\n                        holder.viewBinding.titleHour,\n                        holder.viewBinding.hoursTv,\n                        holder.viewBinding.titleMinutes,\n                        holder.viewBinding.minutesTv,\n                        holder.viewBinding.titleSeconds,\n                        holder.viewBinding.secondsTv,\n                        null\n                    )\n                } else {\n                    holder.viewBinding.containerTimeBar.hide()\n                }\n                handler?.postDelayed(this, INTERVAL)\n            }\n        }\n        runnable?.let { handler?.post(it) }\n    }\n\n    // Update adapter method to refresh the product list\n    fun updateAdapter(\n        productList: List<Product>,\n        isHorizontal: Boolean = false,\n        isMyProduct: Boolean = false\n    ) {\n        this.productList = productList\n        this.isHorizontal = isHorizontal\n        this.isMyProduct = isMyProduct\n        notifyDataSetChanged()\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/malqaa/androidappp/newPhase/presentation/adapterShared/DidNotSaleAdapter.kt b/app/src/main/java/com/malqaa/androidappp/newPhase/presentation/adapterShared/DidNotSaleAdapter.kt
--- a/app/src/main/java/com/malqaa/androidappp/newPhase/presentation/adapterShared/DidNotSaleAdapter.kt	(revision ed94b5164f5e02bc4f25acc2e784abfa46af5293)
+++ b/app/src/main/java/com/malqaa/androidappp/newPhase/presentation/adapterShared/DidNotSaleAdapter.kt	(date 1747708549631)
@@ -209,7 +209,7 @@
 
         // Click listeners for product item and favorite icon
         holder.viewBinding.fullview.setOnClickListener {
-            setOnProductItemListeners.onProductSelect(position, product.id, categoryId)
+            setOnProductItemListeners.onProductSelect(position, product.id, categoryId,ConstantObjects.logged_userid,product.providerId.toString(),product.businessAccountId.toString())
         }
         holder.viewBinding.ivFav.setOnClickListener {
             setOnProductItemListeners.onAddProductToFav(position, product.id, categoryId)
Index: app/src/main/java/com/malqaa/androidappp/newPhase/presentation/activities/productDetailsActivity/ProductDetailsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.malqaa.androidappp.newPhase.presentation.activities.productDetailsActivity\n\nimport android.Manifest\nimport android.annotation.SuppressLint\nimport android.app.Activity\nimport android.content.Intent\nimport android.content.pm.PackageManager\nimport android.net.Uri\nimport android.os.Build\nimport android.os.Bundle\nimport android.os.Handler\nimport android.os.Looper\nimport android.util.Log\nimport android.view.View\nimport android.widget.Toast\nimport androidx.activity.result.contract.ActivityResultContracts\nimport androidx.annotation.RequiresApi\nimport androidx.core.app.ActivityCompat\nimport androidx.core.view.isVisible\nimport androidx.lifecycle.MutableLiveData\nimport androidx.lifecycle.ViewModelProvider\nimport androidx.lifecycle.lifecycleScope\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout\nimport com.malqaa.androidappp.R\nimport com.malqaa.androidappp.databinding.ActivityProductDetails2Binding\nimport com.malqaa.androidappp.databinding.ActivityProductDetailsItem2Binding\nimport com.malqaa.androidappp.newPhase.core.BaseActivity\nimport com.malqaa.androidappp.newPhase.data.network.service.SetOnProductItemListeners\nimport com.malqaa.androidappp.newPhase.domain.enums.ShowUserInfo\nimport com.malqaa.androidappp.newPhase.domain.models.ImageSelectModel\nimport com.malqaa.androidappp.newPhase.domain.models.addProductToCartResp.AddProductObjectData\nimport com.malqaa.androidappp.newPhase.domain.models.categoryFollowResp.Branch\nimport com.malqaa.androidappp.newPhase.domain.models.dynamicSpecification.DynamicSpecificationSentObject\nimport com.malqaa.androidappp.newPhase.domain.models.homeSilderResp.HomeSliderItem\nimport com.malqaa.androidappp.newPhase.domain.models.loginResp.LoginUser\nimport com.malqaa.androidappp.newPhase.domain.models.productResp.Product\nimport com.malqaa.androidappp.newPhase.domain.models.questionResp.QuestionItem\nimport com.malqaa.androidappp.newPhase.domain.models.ratingResp.RateReviewItem\nimport com.malqaa.androidappp.newPhase.domain.models.sellerInfoResp.SellerInformation\nimport com.malqaa.androidappp.newPhase.presentation.MainActivity\nimport com.malqaa.androidappp.newPhase.presentation.activities.addProductReviewActivity.AddRateProductActivity\nimport com.malqaa.androidappp.newPhase.presentation.activities.addProductReviewActivity.ProductReviewsActivity\nimport com.malqaa.androidappp.newPhase.presentation.activities.cartActivity.activity1.CartActivity\nimport com.malqaa.androidappp.newPhase.presentation.activities.cartActivity.activity2.AddressPaymentActivity\nimport com.malqaa.androidappp.newPhase.presentation.activities.loginScreen.SignInActivity\nimport com.malqaa.androidappp.newPhase.presentation.activities.productDetailsActivity.adapter.ProductImagesAdapter\nimport com.malqaa.androidappp.newPhase.presentation.activities.productDetailsActivity.adapter.QuestionAnswerAdapter\nimport com.malqaa.androidappp.newPhase.presentation.activities.productDetailsActivity.adapter.ReviewProductAdapter\nimport com.malqaa.androidappp.newPhase.presentation.activities.productDetailsActivity.adapter.SpecificationAdapter\nimport com.malqaa.androidappp.newPhase.presentation.activities.productDetailsActivity.viewModels.ProductDetailsViewModel\nimport com.malqaa.androidappp.newPhase.presentation.activities.productQuestionActivity.QuestionActivity\nimport com.malqaa.androidappp.newPhase.presentation.activities.productsSellerInfoActivity.SellerInformationActivity\nimport com.malqaa.androidappp.newPhase.presentation.adapterShared.ProductHorizontalAdapter\nimport com.malqaa.androidappp.newPhase.presentation.dialogsShared.currentPriceDialog.BuyCurrentPriceDialog\nimport com.malqaa.androidappp.newPhase.presentation.fragments.accountFragment.myProducts.dialog.BidPersonsDialog\nimport com.malqaa.androidappp.newPhase.presentation.fragments.homeScreen.ListenerSlider\nimport com.malqaa.androidappp.newPhase.presentation.fragments.homeScreen.adapters.SliderAdaptor\nimport com.malqaa.androidappp.newPhase.utils.ConstantObjects\nimport com.malqaa.androidappp.newPhase.utils.Extension\nimport com.malqaa.androidappp.newPhase.utils.Extension.shared\nimport com.malqaa.androidappp.newPhase.utils.HelpFunctions\nimport com.malqaa.androidappp.newPhase.utils.HelpFunctions.Companion.getDifference\nimport com.malqaa.androidappp.newPhase.utils.VideoDialogFragment\nimport com.malqaa.androidappp.newPhase.utils.WebViewPlayerDialogFragment\nimport com.malqaa.androidappp.newPhase.utils.YouTubePlayerDialogFragment\nimport com.malqaa.androidappp.newPhase.utils.extractYouTubeId\nimport com.malqaa.androidappp.newPhase.utils.helper.shared_preferences.SharedPreferencesStaticClass\nimport com.malqaa.androidappp.newPhase.utils.hide\nimport com.malqaa.androidappp.newPhase.utils.isVideoLink\nimport com.malqaa.androidappp.newPhase.utils.isYouTubeLink\nimport com.malqaa.androidappp.newPhase.utils.linearLayoutManager\nimport com.malqaa.androidappp.newPhase.utils.show\nimport com.yariksoffice.lingver.Lingver\nimport io.paperdb.Paper\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.launch\nimport kotlinx.coroutines.withContext\nimport org.joda.time.DateTime\nimport org.joda.time.Duration\nimport org.joda.time.format.DateTimeFormat\nimport java.util.Date\n\n@SuppressLint(\"SetTextI18n\")\nclass ProductDetailsActivity : BaseActivity<ActivityProductDetails2Binding>(),\n    SwipeRefreshLayout.OnRefreshListener,\n    SetOnProductItemListeners, QuestionAnswerAdapter.SetonSelectedQuestion,\n    BuyCurrentPriceDialog.OnAttachedCartMethodSelected, ListenerSlider {\n\n    val PERMISSION_PHONE = 120\n    var addProductReviewRequestCode = 1000\n    lateinit var product: Product\n    private val handler: Handler by lazy {\n        Handler(Looper.getMainLooper())\n    }\n\n    lateinit var productDetailsItem2Binding: ActivityProductDetailsItem2Binding\n\n    private lateinit var runnable: Runnable\n    private val INTERVAL: Long = 10000 // 1 minute in milliseconds\n    var hideBars = MutableLiveData<Boolean>(false)\n    lateinit var questionAnswerAdapter: QuestionAnswerAdapter\n    lateinit var reviewProductAdapter: ReviewProductAdapter\n    lateinit var smallRatesList: ArrayList<RateReviewItem>\n    lateinit var mainRatesList: ArrayList<RateReviewItem>\n    lateinit var sellerProductAdapter: ProductHorizontalAdapter\n    lateinit var similarProductAdapter: ProductHorizontalAdapter\n\n    private lateinit var productDetialsViewModel: ProductDetailsViewModel\n    private var productDetails: Product? = null\n    private var productId: Int = -1\n    var urlImg = \"\"\n    lateinit var specificationAdapter: SpecificationAdapter\n    lateinit var specificationList: ArrayList<DynamicSpecificationSentObject>\n    lateinit var productImagesAdapter: ProductImagesAdapter\n    lateinit var productImagesList: ArrayList<ImageSelectModel>\n    lateinit var similerProductList: ArrayList<Product>\n    lateinit var sellerSimilerProductList: ArrayList<Product>\n    var questionsList: List<QuestionItem> = ArrayList()\n    lateinit var subQuestionsList: ArrayList<QuestionItem>\n\n    var imgPosition = 0\n\n    /****/\n    val added_from_product_Destails_status = 1\n    val added_from_last_similerProducts_status = 2\n    val added_from_last_seller_Products_status = 3\n    var added_position_from_last_Product = 0\n    var status_product_added_to_fav_from = 0\n    var productfavStatus = false\n    var favAddingChange = false\n    private var userData: LoginUser? = null\n    var isMyProduct = false\n    var sellerInformation: SellerInformation? = null\n    lateinit var priceNegotiationDialog: PriceNegotiationDialog\n    var bidCount: Int = 0\n    var productPrice: Float = 0f\n    var comeFrom = \"\"\n\n    private lateinit var buyCurrentPriceDialog: BuyCurrentPriceDialog\n    val sellerInformationLaucher =\n        registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result ->\n            if (result.resultCode == Activity.RESULT_OK) {\n                val intent: Intent? = result.data\n                if (intent != null) {\n                    val isFollow = intent.getBooleanExtra(\"isFollow\", false)\n                    sellerInformation?.isFollowed = isFollow\n                    if (isFollow) {\n                        productDetailsItem2Binding.ivSellerFollow.setImageResource(R.drawable.notification)\n                    } else {\n                        productDetailsItem2Binding.ivSellerFollow.setImageResource(R.drawable.notification_log)\n                    }\n                }\n            }\n        }\n\n    @RequiresApi(Build.VERSION_CODES.O)\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        // Inflate the main layout using the main binding\n        binding = ActivityProductDetails2Binding.inflate(layoutInflater)\n        setContentView(binding.root) // Use the main binding to set the content view\n\n        // Inflate the item binding for a specific section if necessary\n        productDetailsItem2Binding =\n            binding.containerMainProduct // If it's nested in the main layout as an include\n\n        productId = intent.getIntExtra(ConstantObjects.productIdKey, -1)\n        comeFrom = intent.getStringExtra(\"ComeFrom\") ?: \"\"\n\n        isMyProduct = intent.getBooleanExtra(ConstantObjects.isMyProduct, false)\n\n        setViewChanges()\n        setProductDetailsViewModel()\n        setupViewClickListeners()\n        setupViewAdapters()\n\n//        if (HelpFunctions.isUserLoggedIn()) {\n        userData = Paper.book().read<LoginUser>(SharedPreferencesStaticClass.user_object)\n        productDetialsViewModel.addLastViewedProduct(productId)\n//        }\n\n        onRefresh()\n    }\n\n    private fun callGetPriceCart(nameProduct: String) {\n\n        if (SharedPreferencesStaticClass.getMasterCartId().toInt() != 0) {\n            if (productPrice != 0f) {\n                productDetialsViewModel.getCartTotalPrice()\n                productDetialsViewModel.getCartPrice.observe(this) {\n\n                    openBuyCurrentPriceDialog(\n                        \"${\n                            productPrice + it.data.toString().toFloat()\n                        } ${getString(R.string.sar)}\", nameProduct\n                    )\n                    productDetialsViewModel.getCartPrice.removeObservers(this)\n\n                }\n            } else {\n                HelpFunctions.ShowLongToast(getString(R.string.productPriceRequire), this)\n            }\n        } else {\n            openBuyCurrentPriceDialog(\n                \"${productDetails?.priceDisc} ${getString(R.string.sar)}\",\n                nameProduct\n            )\n        }\n    }\n\n    private fun openBuyCurrentPriceDialog(price: String, nameProduct: String) {\n        buyCurrentPriceDialog = BuyCurrentPriceDialog(this, price, nameProduct, this)\n        if (!buyCurrentPriceDialog.isShowing)\n            buyCurrentPriceDialog.show()\n    }\n\n    override fun setOnGoCart() {\n        productDetialsViewModel.addProductToCart(\n            SharedPreferencesStaticClass.getMasterCartId(),\n            productId\n        )\n        buyCurrentPriceDialog.dismiss()\n    }\n\n    override fun setOnFollowShopping() {\n\n        buyCurrentPriceDialog.dismiss()\n    }\n\n    /**set view changes*/\n    private fun setViewChanges() {\n        binding.swipeToRefresh.setColorSchemeResources(R.color.colorPrimaryDark)\n        binding.swipeToRefresh.setOnRefreshListener(this)\n        if (Lingver.getInstance().getLanguage() == ConstantObjects.ARABIC) {\n            binding.fbButtonBack.scaleX = 1f\n        } else {\n            binding.fbButtonBack.scaleX = -1f\n        }\n        productDetailsItem2Binding.btnMapSeller.hide()\n        binding.containerMyBid.hide()\n        productDetailsItem2Binding.containerAuctionNumber.hide()\n        val containerMainProduct = binding.root.findViewById<View>(R.id.containerMainProduct)\n        containerMainProduct.hide()\n        binding.otherImageLayout.hide()\n        productDetailsItem2Binding.btnMoreSpecification.hide()\n        productDetailsItem2Binding.btnMoreItemDetails.hide()\n        productDetailsItem2Binding.contaienrSimilerProduts.hide()\n        binding.containerBidOnPrice.hide()\n        productDetailsItem2Binding.tvShippingOptions.hide()\n        productDetailsItem2Binding.contianerBankAccount.hide()\n        productDetailsItem2Binding.containerMada.hide()\n        productDetailsItem2Binding.containerMaster.hide()\n        productDetailsItem2Binding.contianerCash.hide()\n        productDetailsItem2Binding.containerAuctioncountdownTimerBar.hide()\n        //for reviewa\n        productDetailsItem2Binding.tvReviewsError.hide()\n        productDetailsItem2Binding.contianerRateText.hide()\n        productDetailsItem2Binding.containerSellerInfo.hide()\n        productDetailsItem2Binding.containerSellerProduct.hide()\n        //====\n        productDetailsItem2Binding.tvNumberQuestionNotAnswer.text =\n            getString(R.string.there_are_2_questions_that_the_seller_did_not_answer, \"0\")\n        if (HelpFunctions.isUserLoggedIn()) {\n            productDetailsItem2Binding.containerMainAskQuestion.show()\n            //  containerBuyButtons.show()\n        } else {\n            productDetailsItem2Binding.containerMainAskQuestion.hide()\n            // containerBuyButtons.hide()\n        }\n        if (isMyProduct) {\n            productDetailsItem2Binding.containerMainAskQuestion.hide()\n        } else {\n            productDetailsItem2Binding.containerMainAskQuestion.show()\n        }\n    }\n\n    private fun showProductApiError(message: String) {\n        if (productDetails == null) {\n            val containerMainProduct = binding.root.findViewById<View>(R.id.containerMainProduct)\n            containerMainProduct.hide()\n            binding.containerShareAndFav.hide()\n        }\n        HelpFunctions.ShowLongToast(message, this)\n    }\n\n\n    /**set view listeners*/\n\n    private fun setupViewClickListeners() {\n\n        binding.productimg.setOnClickListener {\n            val intent = Intent(this@ProductDetailsActivity, ImageViewLargeActivity::class.java)\n            intent.putParcelableArrayListExtra(\"imgList\", productImagesList)\n            intent.putExtra(\"UrlImg\", binding.productimg.tag.toString())\n            startActivity(intent)\n        }\n\n        productDetailsItem2Binding.ivSellerFollow.setOnClickListener {\n            if (HelpFunctions.isUserLoggedIn()) {\n                sellerInformation?.let {\n                    if (it.isFollowed) {\n                        productDetialsViewModel.removeSellerToFav(\n                            it.providerId,\n                            it.businessAccountId\n                        )\n                    } else {\n                        productDetialsViewModel.addSellerToFav(it.providerId, it.businessAccountId)\n                    }\n                }\n            } else {\n                startActivity(\n                    Intent(\n                        this,\n                        SignInActivity::class.java\n                    ).apply {})\n            }\n\n\n        }\n        productDetailsItem2Binding.containerAuctionNumber.setOnClickListener {\n\n            val bidPersonsDialog = BidPersonsDialog(\n                \"${productDetails?.highestBidPrice} ${getString(R.string.Rayal)}\",\n                this,\n                productId,\n                object : BidPersonsDialog.SetOnAddBidOffersListeners {\n                    override fun onAddOpenBidOfferDailog(bidsList: List<String>) {\n                    }\n\n                    override fun onOpenAuctionDialog() {\n                        openBidPrice()\n                    }\n\n                }, true\n            )\n            bidPersonsDialog.show()\n        }\n        productDetailsItem2Binding.tvAddReview.setOnClickListener {\n            if (HelpFunctions.isUserLoggedIn()) {\n                startActivityForResult(Intent(this, AddRateProductActivity::class.java).apply {\n                    putExtra(ConstantObjects.productIdKey, productId)\n                }, addProductReviewRequestCode)\n            } else {\n                startActivity(\n                    Intent(\n                        this,\n                        SignInActivity::class.java\n                    ).apply {})\n            }\n        }\n        productDetailsItem2Binding.skypeBtn.setOnClickListener {\n            if (sellerInformation?.skype != null && sellerInformation?.skype != \"\") {\n                HelpFunctions.openExternalLInk(sellerInformation?.skype!!, this)\n            }\n        }\n        productDetailsItem2Binding.youtubeBtn.setOnClickListener {\n            if (sellerInformation?.youTube != null && sellerInformation?.youTube != \"\") {\n                HelpFunctions.openExternalLInk(sellerInformation?.youTube!!, this)\n\n            }\n        }\n        productDetailsItem2Binding.instagramBtn.setOnClickListener {\n            if (sellerInformation?.instagram != null && sellerInformation?.instagram != \"\") {\n                HelpFunctions.openExternalLInk(sellerInformation?.instagram!!, this)\n            }\n        }\n        productDetailsItem2Binding.facebookBtn.setOnClickListener {\n            if (sellerInformation?.faceBook != null && sellerInformation?.faceBook != \"\") {\n                HelpFunctions.openExternalLInk(sellerInformation?.faceBook!!, this)\n            }\n        }\n        productDetailsItem2Binding.twitterBtn.setOnClickListener {\n            if (sellerInformation?.twitter != null && sellerInformation?.twitter != \"\") {\n                HelpFunctions.openExternalLInk(sellerInformation?.twitter!!, this)\n            }\n        }\n        productDetailsItem2Binding.linkedInBtn.setOnClickListener {\n            if (sellerInformation?.linkedIn != null && sellerInformation?.linkedIn != \"\") {\n                HelpFunctions.openExternalLInk(sellerInformation?.linkedIn!!, this)\n            }\n        }\n        productDetailsItem2Binding.tiktokBtn.setOnClickListener {\n            if (sellerInformation?.tikTok != null && sellerInformation?.tikTok != \"\") {\n                HelpFunctions.openExternalLInk(sellerInformation?.tikTok!!, this)\n            }\n        }\n        productDetailsItem2Binding.snapChatBtn.setOnClickListener {\n            if (sellerInformation?.snapchat != null && sellerInformation?.snapchat != \"\") {\n                HelpFunctions.openExternalLInk(sellerInformation?.snapchat!!, this)\n            }\n        }\n        productDetailsItem2Binding.btnMapSeller.setOnClickListener {\n            openLocationInMap(sellerInformation?.branches ?: arrayListOf())\n\n        }\n\n\n\n        binding.ivFav.setOnClickListener {\n            if (HelpFunctions.isUserLoggedIn()) {\n                status_product_added_to_fav_from = added_from_product_Destails_status\n                productDetialsViewModel.addProductToFav(productId)\n            } else {\n                startActivity(\n                    Intent(\n                        this,\n                        SignInActivity::class.java\n                    ).apply {})\n            }\n\n        }\n        binding.fbButtonBack.setOnClickListener {\n            onBackPressed()\n        }\n        productDetailsItem2Binding.btnPriceNegotiation.setOnClickListener {\n            if (HelpFunctions.isUserLoggedIn()) {\n                openPriceNegotiationDialog(productDetails?.qty ?: 0)\n            } else {\n                startActivity(Intent(this, SignInActivity::class.java))\n            }\n        }\n        binding.btnShare.setOnClickListener {\n            shared(\"http://advdev-001-site1.dtempurl.com/Home/GetProductById?id=$productId\")\n            //shared(\"${Constants.HTTP_PROTOCOL}://${Constants.SERVER_LOCATION}/Advertisement/Detail/$AdvId\")\n        }\n\n        productDetailsItem2Binding.tvQuestionAndAnswersShowAll.setOnClickListener {\n            if (HelpFunctions.isUserLoggedIn()) {\n                startActivity(Intent(this, QuestionActivity::class.java).apply {\n                    putExtra(ConstantObjects.productIdKey, productId)\n                    putExtra(ConstantObjects.isMyProduct, isMyProduct)\n                })\n            } else {\n                startActivity(Intent(this, SignInActivity::class.java))\n            }\n\n        }\n\n\n        productDetailsItem2Binding.tvShowAllReviews.setOnClickListener {\n            startActivity(Intent(this, ProductReviewsActivity::class.java).apply {\n                putExtra(ConstantObjects.productIdKey, productId)\n            })\n\n\n        }\n        productDetailsItem2Binding.btnSellerProducts.setOnClickListener {\n            if (productDetailsItem2Binding.containerSellerProduct.isVisible) {\n                productDetailsItem2Binding.containerSellerProduct.hide()\n                productDetailsItem2Binding.sellerProductTv.text =\n                    getString(R.string.view_similar_product_from_seller)\n                productDetailsItem2Binding.isSellerProductHideIv.setImageResource(R.drawable.down_arrow)\n            } else {\n                productDetailsItem2Binding.containerSellerProduct.show()\n                productDetailsItem2Binding.sellerProductTv.text = getString(R.string.showLess)\n                productDetailsItem2Binding.isSellerProductHideIv.setImageResource(R.drawable.ic_arrow_up)\n            }\n        }\n\n        productDetailsItem2Binding.containerSellerInfo.setOnClickListener {\n            if (sellerInformation != null) {\n                sellerInformationLaucher.launch(\n                    Intent(\n                        this,\n                        SellerInformationActivity::class.java\n                    ).apply {\n                        if (sellerInformation?.branches == null)\n                            sellerInformation?.branches = arrayListOf()\n\n                        putExtra(ConstantObjects.sellerObjectKey, sellerInformation)\n                    })\n//                startActivity(Intent(this, SellerInformationActivity::class.java))\n            }\n        }\n        productDetailsItem2Binding.containerSellerImage.setOnClickListener {\n            if (sellerInformation != null) {\n                sellerInformationLaucher.launch(\n                    Intent(\n                        this,\n                        SellerInformationActivity::class.java\n                    ).apply {\n                        if (sellerInformation?.branches == null)\n                            sellerInformation?.branches = arrayListOf()\n\n                        putExtra(ConstantObjects.sellerObjectKey, sellerInformation)\n                    })\n            }\n        }\n        binding.containerCurrentPriceBuy.setOnClickListener {\n            callGetPriceCart(productDetails?.name ?: \"\")\n\n        }\n\n        binding.containerBuyNow.setOnClickListener {\n            if (HelpFunctions.isUserLoggedIn()) {\n                productDetialsViewModel.callBuyNow(productDetails?.id ?: 0)\n            } else {\n                goToSignInActivity()\n            }\n\n        }\n        binding.containerBidOnPrice.setOnClickListener {\n            openBidPrice()\n\n        }\n        productDetailsItem2Binding.contianerAskQuestion.setOnClickListener {\n            if (HelpFunctions.isUserLoggedIn()) {\n                confirmAskQues()\n            } else {\n                goToSignInActivity()\n            }\n        }\n\n        productDetailsItem2Binding.sellerNumber.setOnClickListener {\n            val callIntent = Intent(Intent.ACTION_CALL)\n            callIntent.data =\n                Uri.parse(\"tel:\" + productDetailsItem2Binding.sellerNumber.text.toString())\n\n            if (ActivityCompat.checkSelfPermission(\n                    this,\n                    Manifest.permission.CALL_PHONE\n                ) != PackageManager.PERMISSION_GRANTED\n            ) {\n                // Request permission if not granted\n                ActivityCompat.requestPermissions(\n                    this, arrayOf<String>(Manifest.permission.CALL_PHONE),\n                    PERMISSION_PHONE\n                )\n\n            } else {\n                startActivity(callIntent)\n            }\n        }\n\n        binding.btnNextImage.setOnClickListener {\n            try {\n                if (productImagesList.size > 0) {\n                    val position = getLastVisiblePosition(binding.rvProductImages)\n//                println(\"hhhh \"+ position+\" \"+(productImagesList.size-1))\n                    if (position < productImagesList.size - 1) {\n                        binding.rvProductImages.smoothScrollToPosition(position + 1)\n                    } else {\n                        binding.rvProductImages.smoothScrollToPosition(0)\n                    }\n                }\n            } catch (_: Exception) {\n            }\n        }\n\n\n    }\n\n    override fun onRequestPermissionsResult(\n        requestCode: Int,\n        permissions: Array<out String>,\n        grantResults: IntArray\n    ) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults)\n        when (requestCode) {\n            PERMISSION_PHONE -> {\n                if (grantResults.size > 0 && grantResults[0] ==\n                    PackageManager.PERMISSION_GRANTED\n                ) {\n                    val callIntent = Intent(Intent.ACTION_CALL)\n                    callIntent.data =\n                        Uri.parse(\"tel:\" + productDetailsItem2Binding.sellerNumber.text.toString())\n                    startActivity(callIntent)\n                } else {\n                    HelpFunctions.ShowLongToast(\"Permission Phone denied\", this)\n                }\n            }\n        }\n    }\n\n    private fun openBidPrice() {\n        if (HelpFunctions.isUserLoggedIn()) {\n            productDetails?.let {\n                val auctionDialog = AuctionDialog(\n                    this,\n                    productId,\n                    it.auctionStartPrice,\n                    it.auctionMinimumPrice,\n                    it.highestBidPrice,\n                    object : AuctionDialog.SetClickListeners {\n                        override fun setOnSuccessListeners(highestBidPrice: Float) {\n                            productDetails?.highestBidPrice = highestBidPrice\n                            if (productDetails?.highestBidPrice?.toDouble() != 0.0) {\n                                binding.BidOnPriceTv.text =\n                                    \"${productDetails?.highestBidPrice} ${getString(R.string.Rayal)}\"\n                            } else {\n                                binding.BidOnPriceTv.text =\n                                    \"${productDetails?.auctionStartPrice} ${getString(R.string.Rayal)}\"\n                            }\n                            bidCount += 1\n                            productDetailsItem2Binding.tvAuctionNumber.text =\n                                \"${getString(R.string.bidding)} ${bidCount}\"\n                        }\n\n                    })\n                auctionDialog.show()\n            }\n        } else {\n            startActivity(\n                Intent(\n                    this,\n                    SignInActivity::class.java\n                ).apply {})\n        }\n\n    }\n\n    private fun openPriceNegotiationDialog(quantity: Int) {\n        priceNegotiationDialog = PriceNegotiationDialog(\n            this,\n            quantity,\n            productId,\n            object : PriceNegotiationDialog.SetClickListeners {\n                override fun setOnSuccessListeners(highestBidPrice: String) {\n                    priceNegotiationDialog.dismiss()\n                    openPriceNegotiationDoneSuccess(highestBidPrice)\n                }\n\n            })\n        priceNegotiationDialog.show()\n    }\n\n    private fun openPriceNegotiationDoneSuccess(highestBidPrice: String) {\n        println(\"hhhh success\")\n        val intent = Intent(this, SuccessAddProductPriceNegotiationActivity::class.java).apply {\n            putExtra(\"price\", highestBidPrice)\n        }\n        startActivity(intent)\n    }\n\n    private fun openLocationInMap(lat: Double, langtiude: Double) {\n        val URL = (\"http://maps.google.com/maps?saddr=&daddr=$lat,$langtiude&dirflg=d\")\n        val location = Uri.parse(URL)\n        val mapIntent = Intent(Intent.ACTION_VIEW, location)\n        // Make the Intent explicit by setting the Google Maps package\n        mapIntent.setPackage(\"com.google.android.apps.maps\")\n        startActivity(mapIntent)\n    }\n\n    private fun openLocationInMap(branches: ArrayList<Branch>) {\n        startActivity(Intent(this, ShowBranchesMapActivity::class.java).apply {\n            putParcelableArrayListExtra(\"customBranches\", branches)\n\n        })\n    }\n\n    private fun getLastVisiblePosition(rv: RecyclerView?): Int {\n        if (rv != null) {\n            val layoutManager = rv.layoutManager\n            if (layoutManager is LinearLayoutManager) {\n                return layoutManager.findLastCompletelyVisibleItemPosition()\n            }\n        }\n        return 0\n    }\n\n    /**set up view model*/\n    private fun setProductDetailsViewModel() {\n        productDetialsViewModel = ViewModelProvider(this).get(ProductDetailsViewModel::class.java)\n        productDetialsViewModel.isLoading.observe(this) {\n            if (it)\n                HelpFunctions.startProgressBar(this)\n            else\n                HelpFunctions.dismissProgressBar()\n        }\n\n        productDetialsViewModel.isNetworkFail.observe(this) {\n            if (it) {\n                showProductApiError(getString(R.string.connectionError))\n            } else {\n                showProductApiError(getString(R.string.serverError))\n            }\n\n        }\n        productDetialsViewModel.errorResponseObserver.observe(this) {\n            if (it.status != null && it.status == \"409\") {\n                HelpFunctions.ShowLongToast(getString(R.string.dataAlreadyExit), this)\n            } else {\n                if (it.message != null) {\n                    showProductApiError(it.message!!)\n                } else {\n                    showProductApiError(getString(R.string.serverError))\n                }\n            }\n        }\n        productDetialsViewModel.productDetailsObservable.observe(this) { productResp ->\n            val businessAccountId = productResp.productDetails?.businessAccountId\n            val providerId = productResp.productDetails?.providerId\n\n            Log.i(\"ProductDetailsActivity\", \"businessAccountId: $businessAccountId\")\n            Log.i(\"ProductDetailsActivity\", \"providerId: $providerId\")\n\n            if (businessAccountId != null && providerId == ConstantObjects.logged_userid) {\n                startActivity(\n                    Intent(this, MyProductDetailsActivity::class.java).apply {\n                        putExtra(ConstantObjects.productIdKey, productId)\n                        putExtra(ConstantObjects.isMyProduct, true)\n                        putExtra(\"isMyProductForSale\", true)\n                    })\n                finish()\n            } else {\n                if (productResp.productDetails != null) {\n                    productDetails = productResp.productDetails\n\n                    productPrice = productResp.productDetails.priceDisc\n                    setProductData(productDetails)\n                } else {\n                    showProductApiError(productResp.message)\n                }\n            }\n        }\n        productDetialsViewModel.addQuestionObservable.observe(this) { questResp ->\n            HelpFunctions.ShowLongToast(questResp.message, this)\n            if (questResp.status_code == 200) {\n                productDetailsItem2Binding.etWriteQuestion.setText(\"\")\n\n                productDetialsViewModel.getListOfQuestions(productId)\n            }\n        }\n        productDetialsViewModel.getSimilarProductObservable.observe(this) { similarProductRes ->\n            if (similarProductRes.productList != null) {\n                similerProductList.clear()\n                similerProductList.addAll(similarProductRes.productList)\n                similarProductAdapter.notifyDataSetChanged()\n                productDetailsItem2Binding.contaienrSimilerProduts.show()\n            }\n        }\n        productDetialsViewModel.getListOfQuestionsObservable.observe(this) { questionListResp ->\n            if (!questionListResp.questionList.isNullOrEmpty()) {\n                productDetailsItem2Binding.tvErrorNoQuestion.hide()\n                setQuestionsView(questionListResp.questionList)\n            } else {\n                productDetailsItem2Binding.tvErrorNoQuestion.show()\n            }\n        }\n        productDetialsViewModel.isNetworkFailProductToFav.observe(this) {\n            if (it) {\n                HelpFunctions.ShowLongToast(\n                    getString(R.string.connectionError),\n                    this\n                )\n            } else {\n                HelpFunctions.ShowLongToast(\n                    getString(R.string.serverError),\n                    this\n                )\n            }\n\n        }\n\n        productDetialsViewModel.getMasterFromBuyNow.observe(this) {\n            SharedPreferencesStaticClass.saveMasterCartId(it.data)\n            gotToAddressPaymentActivity()\n        }\n        productDetialsViewModel.errorResponseObserverProductToFav.observe(this) {\n            if (it.status != null && it.status == \"409\") {\n                HelpFunctions.ShowLongToast(getString(R.string.dataAlreadyExit), this)\n            } else {\n\n                if (it.message != null && it.message != \"\") {\n                    HelpFunctions.ShowLongToast(\n                        it.message!!,\n                        this\n                    )\n                } else {\n                    HelpFunctions.ShowLongToast(\n                        getString(R.string.serverError),\n                        this\n                    )\n                }\n            }\n\n        }\n        productDetialsViewModel.addProductToFavObserver.observe(this) {\n            if (it.status_code == 200) {\n                when (status_product_added_to_fav_from) {\n                    added_from_last_similerProducts_status -> {\n                        if (added_position_from_last_Product < similerProductList.size) {\n                            similerProductList[added_position_from_last_Product].isFavourite =\n                                !similerProductList[added_position_from_last_Product].isFavourite\n                            similarProductAdapter.notifyItemChanged(\n                                added_position_from_last_Product\n                            )\n                        }\n                    }\n\n                    added_from_last_seller_Products_status -> {\n                        if (added_position_from_last_Product < similerProductList.size) {\n                            sellerSimilerProductList[added_position_from_last_Product].isFavourite =\n                                !sellerSimilerProductList[added_position_from_last_Product].isFavourite\n                            sellerProductAdapter.notifyItemChanged(\n                                added_position_from_last_Product\n                            )\n                        }\n                    }\n\n                    added_from_product_Destails_status -> {\n                        favAddingChange = true\n                        productDetails?.let { it ->\n                            it.isFavourite = !it.isFavourite\n                            setProductData(productDetails)\n                        }\n                    }\n                }\n\n\n            }\n        }\n        productDetialsViewModel.getRateResponseObservable.observe(this) { rateListResp ->\n            if (rateListResp.data.happyCount != 0) {\n                productDetailsItem2Binding.linHappy.show()\n                productDetailsItem2Binding.txtHappy.text = rateListResp.data.happyCount.toString()\n            }\n            if (rateListResp.data.satisfiedCount != 0) {\n                productDetailsItem2Binding.linSmile.show()\n                productDetailsItem2Binding.txtSmile.text =\n                    rateListResp.data.satisfiedCount.toString()\n            }\n            if (rateListResp.data.disgustedCount != 0) {\n                productDetailsItem2Binding.linSad.show()\n                productDetailsItem2Binding.txtSad.text = rateListResp.data.disgustedCount.toString()\n            }\n\n            productDetailsItem2Binding.ratingBarDetailTv.text =\n                \"${rateListResp.data.totalRecords} ${getString(R.string.visitors)} \"\n            if (rateListResp.status_code == 200) {\n                setReviewRateView(rateListResp.data.rateProductListDto)\n            }\n        }\n        productDetialsViewModel.addProductToCartObservable.observe(this) { addproductToCartResp ->\n            if (addproductToCartResp.status_code == 200) {\n                if (SharedPreferencesStaticClass.getCartCount() == 0) {\n                    SharedPreferencesStaticClass.saveCartCount(1)\n                } else {\n                    SharedPreferencesStaticClass.saveCartCount(SharedPreferencesStaticClass.getCartCount() + 1)\n                }\n\n                addproductToCartResp.addProductToCartData?.let {\n                    SharedPreferencesStaticClass.saveMasterCartId(it.cartMasterId)\n                }\n                HelpFunctions.ShowLongToast(getString(R.string.productAddedToCart), this)\n                startActivity(Intent(this, CartActivity::class.java))\n\n            } else {\n                if (addproductToCartResp.message != null) {\n                    HelpFunctions.ShowLongToast(addproductToCartResp.message, this)\n                } else {\n                    HelpFunctions.ShowLongToast(getString(R.string.serverError), this)\n\n                }\n            }\n        }\n        productDetialsViewModel.sellerInfoObservable.observe(this) { sellerInfoResp ->\n            if (sellerInfoResp.status_code == 200) {\n                /**seller info*/\n                sellerInfoResp.sellerInformation?.let {\n                    setSellerInfo(it)\n\n                }\n\n            }\n        }\n        productDetialsViewModel.sellerLoading.observe(this) {\n            if (it) {\n                productDetailsItem2Binding.sellerProgressBar.show()\n            } else {\n                productDetailsItem2Binding.sellerProgressBar.hide()\n            }\n        }\n        productDetialsViewModel.sellerProductsRespObserver.observe(this) { sellerProductListResp ->\n            if (sellerProductListResp.status_code == 200) {\n                sellerSimilerProductList.clear()\n                sellerProductListResp.productList?.let { sellerSimilerProductList.addAll(it) }\n                sellerProductAdapter.notifyDataSetChanged()\n                if (sellerSimilerProductList.isEmpty()) {\n                    productDetailsItem2Binding.tvErrorNoSellerProduct.show()\n                } else {\n                    productDetailsItem2Binding.tvErrorNoSellerProduct.hide()\n                }\n            } else {\n                productDetailsItem2Binding.tvErrorNoSellerProduct.show()\n            }\n        }\n        productDetialsViewModel.shippingOptionObserver.observe(this) {\n            if (it.status_code == 200) {\n                if (!it.shippingOptionObject.isNullOrEmpty()) {\n                    when (it.shippingOptionObject[0].shippingOptionId) {\n                        ConstantObjects.shippingOption_integratedShippingCompanyOptions -> {\n                            productDetailsItem2Binding.tvShippingOptions.show()\n                            productDetailsItem2Binding.tvShippingOptions.text =\n                                getString(R.string.integratedShippingCompanies)\n                        }\n\n                        ConstantObjects.shippingOption_freeShippingWithinSaudiArabia -> {\n                            productDetailsItem2Binding.tvShippingOptions.show()\n                            productDetailsItem2Binding.tvShippingOptions.text =\n                                getString(R.string.free_shipping_within_Saudi_Arabia)\n                        }\n\n                        ConstantObjects.shippingOption_arrangementWillBeMadeWithTheBuyer -> {\n                            productDetailsItem2Binding.tvShippingOptions.show()\n                            productDetailsItem2Binding.tvShippingOptions.text =\n                                getString(R.string.arrangementWillBeMadeWithTheBuyer)\n                        }\n                    }\n                } else {\n                    productDetailsItem2Binding.tvShippingOptions.show()\n                    productDetailsItem2Binding.tvShippingOptions.text =\n                        getString(R.string.mustPickUp)\n                }\n            }\n        }\n        productDetialsViewModel.paymentOptionObserver.observe(this) {\n            if (it.status_code == 200) {\n                it.shippingOptionObject?.let { list ->\n                    for (item in list) {\n                        when (item.paymentOptionId) {\n                            AddProductObjectData.PAYMENT_OPTION_CASH -> {\n                                productDetailsItem2Binding.contianerCash.show()\n                            }\n\n                            AddProductObjectData.PAYMENT_OPTION_BANk -> {\n                                productDetailsItem2Binding.contianerBankAccount.show()\n                            }\n\n                            AddProductObjectData.PAYMENT_OPTION_Mada -> {\n                                productDetailsItem2Binding.containerMada.show()\n                            }\n\n                            AddProductObjectData.PAYMENT_OPTION_MasterCard -> {\n                                productDetailsItem2Binding.containerMaster.show()\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        productDetialsViewModel.bidsPersonsObserver.observe(this) {\n            if (it.status_code == 200) {\n                if (!it.bidPersonsDataList.isNullOrEmpty()) {\n                    bidCount = it.bidPersonsDataList.size\n                    productDetailsItem2Binding.tvAuctionNumber.text =\n                        \"${getString(R.string.bidding)} ${bidCount}\"\n                    if (hideBars.value == true) {\n                        productDetailsItem2Binding.containerAuctionNumber.hide()\n                    } else\n                        productDetailsItem2Binding.containerAuctionNumber.show()\n                } else {\n                    productDetailsItem2Binding.containerAuctionNumber.hide()\n                }\n            } else {\n                productDetailsItem2Binding.containerAuctionNumber.hide()\n            }\n        }\n        productDetialsViewModel.addSellerToFavObserver.observe(this) {\n            if (it.status_code == 200) {\n                sellerInformation?.isFollowed = true\n                productDetailsItem2Binding.ivSellerFollow.setImageResource(R.drawable.notification)\n            }\n        }\n        productDetialsViewModel.removeSellerToFavObserver.observe(this) {\n            if (it.status_code == 200) {\n                sellerInformation?.isFollowed = false\n                productDetailsItem2Binding.ivSellerFollow.setImageResource(R.drawable.notification_log)\n            }\n        }\n\n    }\n\n    private fun setSellerInfo(it: SellerInformation) {\n        productDetailsItem2Binding.tvErrorNoSellerProduct.hide()\n        productDetialsViewModel.getSellerListProduct(\n            it.providerId ?: \"\",\n            it.businessAccountId ?: \"\"\n        )\n        sellerInformation = it\n\n        if (it.showUserInformation == ShowUserInfo.EveryOne.name) {\n            productDetailsItem2Binding.containerSellerInfo.show()\n        } else if (it.showUserInformation == ShowUserInfo.MembersOnly.name) {\n            if (HelpFunctions.isUserLoggedIn()) {\n                productDetailsItem2Binding.containerSellerInfo.show()\n            } else {\n                productDetailsItem2Binding.containerSellerInfo.hide()\n            }\n        } else {\n            productDetailsItem2Binding.containerSellerInfo.hide()\n        }\n\n        showButtons()\n\n        Extension.loadImgGlide(\n            this,\n            it.image,\n            productDetailsItem2Binding.sellerPicture,\n            binding.loader\n        )\n        if (it.businessAccountId == null) {\n            productDetailsItem2Binding.txtTypeUser.text = getString(R.string.personal)\n        } else {\n            productDetailsItem2Binding.txtTypeUser.text = getString(R.string.merchant)\n        }\n        productDetailsItem2Binding.sellerName.text = it.name ?: \"\"\n        productDetailsItem2Binding.memberSinceTv.text = HelpFunctions.getViewFormatForDateTrack(\n            it.createdAt ?: \"\", \"dd/MM/yyyy\"\n        )\n        productDetailsItem2Binding.sellerCity.text = it.city ?: \"\"\n        productDetailsItem2Binding.sellerNumber.text = it.phone ?: \"\"\n        if (it.isFollowed) {\n            productDetailsItem2Binding.ivSellerFollow.setImageResource(R.drawable.notification)\n        } else {\n            productDetailsItem2Binding.ivSellerFollow.setImageResource(R.drawable.notification_log)\n        }\n        if (it.businessAccountId != \"\") {\n            productDetailsItem2Binding.btnMapSeller.show()\n        } else {\n            if (it.lat != null && it.lon != null) {\n                productDetailsItem2Binding.btnMapSeller.show()\n            } else {\n                productDetailsItem2Binding.btnMapSeller.hide()\n            }\n        }\n\n        when (it.rate) {\n            3f -> {\n                productDetailsItem2Binding.ivRateSeller.setImageResource(R.drawable.happyface_color)\n            }\n\n            2f -> {\n                productDetailsItem2Binding.ivRateSeller.setImageResource(R.drawable.smileface_color)\n            }\n\n            1f -> {\n                productDetailsItem2Binding.ivRateSeller.setImageResource(R.drawable.sadcolor_gray)\n            }\n\n            else -> {\n                productDetailsItem2Binding.ivRateSeller.setImageResource(R.drawable.smileface_color)\n            }\n        }\n        if (it.instagram != null && it.instagram != \"\") {\n            productDetailsItem2Binding.instagramBtn.show()\n        } else {\n            productDetailsItem2Binding.instagramBtn.hide()\n        }\n        if (it.youTube != null && it.youTube != \"\") {\n            productDetailsItem2Binding.youtubeBtn.show()\n        } else {\n            productDetailsItem2Binding.youtubeBtn.hide()\n        }\n        if (it.skype != null && it.skype != \"\") {\n            productDetailsItem2Binding.skypeBtn.show()\n        } else {\n            productDetailsItem2Binding.skypeBtn.hide()\n        }\n        if (it.faceBook != null && it.faceBook != \"\") {\n            productDetailsItem2Binding.facebookBtn.show()\n        } else {\n            productDetailsItem2Binding.facebookBtn.hide()\n        }\n        if (it.twitter != null && it.twitter != \"\") {\n            productDetailsItem2Binding.twitterBtn.show()\n        } else {\n            productDetailsItem2Binding.twitterBtn.hide()\n        }\n        if (it.linkedIn != null && it.linkedIn != \"\") {\n            productDetailsItem2Binding.linkedInBtn.show()\n        } else {\n            productDetailsItem2Binding.linkedInBtn.hide()\n        }\n        if (it.tikTok != null && it.tikTok != \"\") {\n            productDetailsItem2Binding.tiktokBtn.show()\n        } else {\n            productDetailsItem2Binding.tiktokBtn.hide()\n        }\n        if (it.snapchat != null && it.snapchat != \"\") {\n            productDetailsItem2Binding.snapChatBtn.show()\n        } else {\n            productDetailsItem2Binding.snapChatBtn.hide()\n        }\n\n        if (it.businessAccountId != \"\") {\n            productDetailsItem2Binding.btnMapSeller.show()\n        } else {\n            if (it.lat != null && it.lon != null) {\n                if (it.lat != 0.0 && it.lon != 0.0) {\n                    productDetailsItem2Binding.btnMapSeller.show()\n                }\n            } else {\n                productDetailsItem2Binding.btnMapSeller.hide()\n            }\n        }\n    }\n\n    private fun setQuestionsView(data: List<QuestionItem>) {\n        questionsList = data\n        val datalist = questionsList.take(3)\n        subQuestionsList.clear()\n        subQuestionsList.addAll(datalist)\n        questionAnswerAdapter.notifyDataSetChanged()\n\n        lifecycleScope.launch(Dispatchers.IO) {\n            var numberOfNotAnswerYet = 0\n            for (question in questionsList) {\n                if (question.answer == null || question.answer == \"\") {\n                    numberOfNotAnswerYet += 1\n                }\n            }\n            withContext(Dispatchers.Main) {\n                productDetailsItem2Binding.tvNumberQuestionNotAnswer.text = getString(\n                    R.string.there_are_2_questions_that_the_seller_did_not_answer,\n                    numberOfNotAnswerYet.toString()\n                )\n\n            }\n        }\n    }\n\n    private fun setReviewRateView(data: List<RateReviewItem>) {\n        mainRatesList.clear()\n        mainRatesList.addAll(data)\n        val datalist = mainRatesList.take(3)\n        smallRatesList.clear()\n        smallRatesList.addAll(datalist)\n        reviewProductAdapter.notifyDataSetChanged()\n\n        if (mainRatesList.isEmpty()) {\n            productDetailsItem2Binding.tvReviewsError.show()\n            productDetailsItem2Binding.tvShowAllReviews.hide()\n            productDetailsItem2Binding.contianerRateText.hide()\n        } else {\n            productDetailsItem2Binding.tvShowAllReviews.show()\n            productDetailsItem2Binding.tvReviewsError.hide()\n            productDetailsItem2Binding.contianerRateText.show()\n        }\n    }\n\n\n    private fun setupViewAdapters() {\n        setSpeceificationAdapter()\n        setQuestionAnswerAdapter()\n        setReviewsAdapter()\n        setSellerAdapter()\n        setSimilarProductAdapter()\n        setupProductImagesAdapter()\n    }\n\n    private fun setupProductImagesAdapter() {\n        productImagesList = ArrayList()\n        productImagesAdapter = ProductImagesAdapter(\n            productImagesList,\n            object : ProductImagesAdapter.SetOnSelectedImage {\n                override fun onSelectImage(position: Int) {\n                    urlImg = productImagesList[position].url\n                    if (productImagesList[position].type == 2) {\n                        // \"https://video.blender.org/download/videos/3d95fb3d-c866-42c8-9db1-fe82f48ccb95-804.mp4\"\n                        // \"https://www.youtube.com/watch?v=QfiH796sMAE\"\n                        // \"https://www.sumologic.com/live-demo/\"\n                        // productImagesList[position].url\n                        val selectedUrl = productImagesList[position].url\n                        Log.i(\"test #1\", \"videoUrl: $selectedUrl\")\n\n                        // Check if selectedUrl is not null or empty\n                        if (selectedUrl.isNotEmpty()) {\n                            when {\n                                isYouTubeLink(selectedUrl) -> {\n                                    // Extract video ID for YouTube\n                                    val videoId = extractYouTubeId(selectedUrl)\n                                    val dialogFragment =\n                                        YouTubePlayerDialogFragment.newInstance(videoId!!)\n                                    dialogFragment.show(\n                                        supportFragmentManager,\n                                        \"YouTubePlayerDialogFragment\"\n                                    )\n                                }\n\n                                isVideoLink(selectedUrl) -> {\n                                    val videoDialogFragment =\n                                        VideoDialogFragment.newInstance(selectedUrl)\n                                    videoDialogFragment.show(supportFragmentManager, \"videoDialog\")\n                                }\n\n                                else -> {\n                                    // Open WebViewPlayerDialogFragment for any other link\n                                    val webViewDialogFragment =\n                                        WebViewPlayerDialogFragment.newInstance(selectedUrl)\n                                    webViewDialogFragment.show(\n                                        supportFragmentManager,\n                                        \"webViewPlayerDialog\"\n                                    )\n                                }\n                            }\n                        } else {\n                            // Handle the case where the URL is null or empty, if necessary\n                            Log.e(\"test #1\", \"selectedUrl is null or empty\")\n                            Toast.makeText(\n                                this@ProductDetailsActivity,\n                                getString(R.string.the_selected_url_is_not_available_or_is_empty),\n                                Toast.LENGTH_SHORT\n                            ).show()\n                        }\n                    } else {\n                        imgPosition = position\n                        binding.productimg.tag = productImagesList[position].url\n\n                        val intent = Intent(\n                            this@ProductDetailsActivity,\n                            ImageViewLargeActivity::class.java\n                        )\n                        intent.putParcelableArrayListExtra(\"imgList\", productImagesList)\n                        intent.putExtra(\"UrlImg\", productImagesList[position].url)\n                        startActivity(intent)\n                    }\n                }\n            })\n\n        binding.rvProductImages.apply {\n            layoutManager = linearLayoutManager(RecyclerView.VERTICAL)\n            adapter = productImagesAdapter\n        }\n    }\n\n    private fun setSimilarProductAdapter() {\n        similerProductList = ArrayList()\n        similarProductAdapter = ProductHorizontalAdapter(similerProductList, this, 0, true)\n        productDetailsItem2Binding.rvSimilarProducts.apply {\n            layoutManager = linearLayoutManager(RecyclerView.HORIZONTAL)\n            adapter = similarProductAdapter\n        }\n    }\n\n    private fun setSellerAdapter() {\n        sellerSimilerProductList = ArrayList()\n        sellerProductAdapter =\n            ProductHorizontalAdapter(sellerSimilerProductList, object : SetOnProductItemListeners {\n                override fun onProductSelect(position: Int,productID:Int,categoryID:Int,userId:String,providerId:String,businessAccountId:String) {\n                    goToProductDetails(productID)\n                }\n\n                override fun onAddProductToFav(position: Int, productID: Int, categoryID: Int) {\n                    addSellerPorductToFav(position, productID)\n\n                }\n\n                override fun onShowMoreSetting(position: Int, productID: Int, categoryID: Int) {\n\n                }\n\n            }, 0, true)\n        productDetailsItem2Binding.rvSellerProduct.apply {\n            layoutManager = linearLayoutManager(RecyclerView.HORIZONTAL)\n            adapter = sellerProductAdapter\n        }\n    }\n\n    private fun addSellerPorductToFav(position: Int, productID: Int) {\n        if (HelpFunctions.isUserLoggedIn()) {\n            status_product_added_to_fav_from = added_from_last_seller_Products_status\n            added_position_from_last_Product = position\n            productDetialsViewModel.addProductToFav(productID)\n        } else {\n            startActivity(\n                Intent(\n                    this,\n                    SignInActivity::class.java\n                ).apply {})\n        }\n    }\n\n    private fun setReviewsAdapter() {\n        mainRatesList = ArrayList()\n        smallRatesList = ArrayList()\n        reviewProductAdapter = ReviewProductAdapter(smallRatesList)\n        productDetailsItem2Binding.rvReview.apply {\n            layoutManager = linearLayoutManager(RecyclerView.VERTICAL)\n            adapter = reviewProductAdapter\n        }\n    }\n\n    private fun setSpeceificationAdapter() {\n        specificationList = ArrayList()\n        specificationAdapter = SpecificationAdapter(specificationList)\n        if (specificationList.size != 0)\n            productDetailsItem2Binding.laySpec.show()\n        productDetailsItem2Binding.rvProductSpecification.apply {\n            layoutManager = linearLayoutManager(RecyclerView.VERTICAL)\n            adapter = specificationAdapter\n        }\n    }\n\n    private fun setQuestionAnswerAdapter() {\n        subQuestionsList = ArrayList()\n        questionAnswerAdapter = QuestionAnswerAdapter(subQuestionsList, this)\n        productDetailsItem2Binding.rvQuestionForProduct.apply {\n            layoutManager = linearLayoutManager(RecyclerView.VERTICAL)\n            adapter = questionAnswerAdapter\n        }\n    }\n\n    /**set product data*/\n\n    override fun onRefresh() {\n        binding.swipeToRefresh.isRefreshing = false\n        val containerMainProduct = binding.root.findViewById<View>(R.id.containerMainProduct)\n        containerMainProduct.hide()\n        binding.containerShareAndFav.hide()\n        productDetailsItem2Binding.containerSellerInfo.hide()\n        productDetialsViewModel.getProductDetailsById(productId)\n        productDetialsViewModel.getSimilarProduct(productId, 1)\n        productDetialsViewModel.getListOfQuestions(productId)\n        productDetialsViewModel.getProductRatesForProductDetails(productId)\n\n        productDetialsViewModel.getSellerInfo(productId)\n\n\n\n\n        productDetialsViewModel.getProductShippingOptions(productId)\n        productDetialsViewModel.getProductPaymentOptions(productId)\n        productDetialsViewModel.getBidsPersons(productId)\n    }\n\n\n    @SuppressLint(\"SetTextI18n\")\n    private fun setProductData(productDetails: Product?) {\n        if (productDetails != null) {\n            val containerMainProduct = binding.root.findViewById<View>(R.id.containerMainProduct)\n            containerMainProduct.show()\n            binding.containerShareAndFav.show()\n\n            // Handling the auction closing time\n            if (productDetails.auctionClosingTime != null) {\n                runnable = object : Runnable {\n                    override fun run() {\n                        val endDate: Date? =\n                            HelpFunctions.getAuctionClosingTimeByDate(productDetails.auctionClosingTime)\n                        if (endDate != null) {\n                            hideBars.value = getDifference(\n                                productDetails.auctionClosingTime,\n                                productDetailsItem2Binding.containerAuctioncountdownTimerBar,\n                                productDetailsItem2Binding.titleDay,\n                                productDetailsItem2Binding.days,\n                                productDetailsItem2Binding.titleHours,\n                                productDetailsItem2Binding.hours,\n                                productDetailsItem2Binding.titleMinutes,\n                                productDetailsItem2Binding.minutes,\n                                productDetailsItem2Binding.titleSeconds,\n                                productDetailsItem2Binding.seconds,\n                                productDetailsItem2Binding.containerAuctionNumber\n                            )\n                        } else {\n                            productDetailsItem2Binding.containerAuctioncountdownTimerBar.hide()\n                        }\n                        handler.postDelayed(this, INTERVAL)\n                    }\n                }\n                handler.post(runnable)\n            } else {\n                productDetailsItem2Binding.containerAuctioncountdownTimerBar.hide()\n            }\n\n            /**product iamges*/\n            Extension.loadImgGlide(\n                this,\n                productDetails.productImage,\n                binding.productimg,\n                binding.loader\n            )\n            binding.productimg.setTag(productDetails.productImage)\n            if (productDetails.listMedia != null && productDetails.listMedia.size != 0) {\n                binding.otherImageLayout.show()\n                productImagesList.clear()\n                if (productDetails.listMedia.isNotEmpty())\n                    urlImg = productDetails.listMedia[0].url\n                productImagesList.addAll(productDetails.listMedia)\n                productImagesAdapter.notifyDataSetChanged()\n\n                setPagerDots(mapImageSelectModelToHomeSliderItem(productDetails.listMedia))\n\n            } else {\n                productImagesList.add(ImageSelectModel(url = productDetails.productImage.toString()))\n                binding.otherImageLayout.hide()\n            }\n            /**product data*/\n            productDetailsItem2Binding.tvProductReview.text =\n                \"${productDetails.viewsCount} ${getString(R.string.Views)} - #${productDetails.id} - ${\n                    HelpFunctions.getViewFormatForDateTrack(\n                        productDetails.createdAt, \"dd/MM/yyyy\"\n                    )\n                }\"\n            productDetailsItem2Binding.tvProductItemName.text = productDetails.name ?: \"\"\n            productDetailsItem2Binding.tvProductSubtitle.text = productDetails.subTitle ?: \"\"\n\n            if (productDetails.description != \"\") {\n                productDetailsItem2Binding.layDetails.show()\n                productDetailsItem2Binding.readMoreTextView.text = productDetails.description ?: \"\"\n            }\n            productDetailsItem2Binding.btnMoreItemDetails.setOnClickListener {}\n\n            binding.currentPriceBuyTv.text =\n                \"${productDetails.priceDisc.toString()} ${getString(R.string.sar)}\"\n            binding.BidOnPriceTv.text = \" ${getString(R.string.sar)}\"\n\n            /**specification*/\n            if (productDetails.listProductSep != null) {\n                productDetailsItem2Binding.tvErrorNoSpecification.hide()\n                if (productDetails.listProductSep.isNotEmpty())\n                    productDetailsItem2Binding.laySpec.show()\n                specificationList.clear()\n                specificationList.addAll(productDetails.listProductSep)\n                specificationAdapter.notifyDataSetChanged()\n            } else {\n                productDetailsItem2Binding.tvErrorNoSpecification.show()\n            }\n            /**pidding views*/\n            productDetailsItem2Binding.tvAuctionNumber.text = \"${getString(R.string.bidding)} \"\n            productfavStatus = productDetails.isFavourite\n            if (productDetails.isFavourite) {\n                binding.ivFav.setImageResource(R.drawable.starcolor)\n                binding.ivFav.setColorFilter(resources.getColor(R.color.orange))\n            } else {\n                binding.ivFav.setImageResource(R.drawable.star)\n            }\n            if (productDetails.isNegotiationEnabled) {\n                productDetailsItem2Binding.btnPriceNegotiation.show()\n            } else {\n                productDetailsItem2Binding.btnPriceNegotiation.hide()\n            }\n\n            if (productDetails.isAuctionEnabled) {\n                if (productDetails.highestBidPrice.toDouble() != 0.0) {\n                    binding.BidOnPriceTv.text =\n                        \"${productDetails.highestBidPrice} ${getString(R.string.Rayal)}\"\n                } else {\n                    binding.BidOnPriceTv.text =\n                        \"${productDetails.auctionStartPrice} ${getString(R.string.Rayal)}\"\n                }\n\n                if (hideBars.value == true) {\n                    binding.containerBidOnPrice.hide()\n                } else\n                    binding.containerBidOnPrice.show()\n            } else {\n                binding.containerBidOnPrice.hide()\n            }\n            if (productDetails.myBid != 0f) {\n                binding.containerMyBid.show()\n                binding.tvMyBidPrice.text = \"${productDetails.myBid} ${getString(R.string.sar)}\"\n            } else {\n                binding.containerMyBid.hide()\n            }\n\n            if (productDetails.acceptQuestion) {\n                productDetailsItem2Binding.sectionQs.show()\n            } else {\n                productDetailsItem2Binding.sectionQs.hide()\n            }\n\n        } else {\n            showError(getString(R.string.serverError))\n        }\n    }\n\n    private fun setPagerDots(list: List<HomeSliderItem>) {\n        if (list.isNotEmpty()) {\n\n            val viewPagerAdapter = SliderAdaptor(this, list, true, this)\n            binding.sliderDetails.adapter = viewPagerAdapter\n        }\n    }\n\n    private fun mapImageSelectModelToHomeSliderItem(imageSelectModels: ArrayList<ImageSelectModel>): List<HomeSliderItem> {\n        return imageSelectModels.filter { it.type != 2 }.map { imageSelectModel ->\n            HomeSliderItem(\n                id = imageSelectModel.id,\n                img = imageSelectModel.url,\n                type = imageSelectModel.type\n            )\n        }\n    }\n\n    @SuppressLint(\"SetTextI18n\")\n    private fun showButtons() {\n        if (productDetails?.isFixedPriceEnabled == true) {\n            binding.containerBuyNow.show()\n            binding.txtPriceNow.text = \"${productDetails?.priceDisc} ${getString(R.string.sar)}\"\n            if (sellerInformation?.businessAccountId != null) {\n                binding.containerCurrentPriceBuy.show() // AddToCart\n            } else {\n                binding.containerCurrentPriceBuy.hide()\n            }\n        } else {\n            binding.containerBuyNow.hide()\n        }\n    }\n\n    private fun timeDifferent(targetDateTimeString: String) {\n        // Specify the target date and time\n        val formatter = DateTimeFormat.forPattern(\"yyyy-MM-dd'T'HH:mm:ss\")\n        val targetDateTime = formatter.parseDateTime(targetDateTimeString)\n\n        // Get the current date and time\n        val currentDateTime = DateTime()\n\n        // Calculate the duration between the current time and the target time\n        val duration = Duration(currentDateTime, targetDateTime)\n\n        // Get the difference in days, hours, and minutes as Long values\n        val daysDifference = duration.standardDays\n        val hoursDifference = duration.standardHours % 24\n        val minutesDifference = duration.standardMinutes % 60\n        val secondDifference = duration.standardSeconds % 60\n\n        if (daysDifference <= 0 && (hoursDifference <= 0) && (minutesDifference <= 0)) {\n            hideBars.value = true\n            productDetailsItem2Binding.containerAuctionNumber.hide()\n            productDetailsItem2Binding.containerAuctioncountdownTimerBar.hide()\n        } else {\n            hideBars.value = false\n            productDetailsItem2Binding.containerAuctionNumber.show()\n            productDetailsItem2Binding.containerAuctioncountdownTimerBar.show()\n        }\n\n        if (daysDifference == 0L || (daysDifference < 0L)) {\n            productDetailsItem2Binding.days.visibility = View.GONE\n            productDetailsItem2Binding.titleDay.visibility = View.GONE\n        }\n        if (hoursDifference == 0L || (hoursDifference < 0L)) {\n            productDetailsItem2Binding.hours.visibility = View.GONE\n            productDetailsItem2Binding.titleHours.visibility = View.GONE\n        }\n\n        if (minutesDifference == 0L || (minutesDifference < 0L)) {\n            productDetailsItem2Binding.minutes.visibility = View.GONE\n            productDetailsItem2Binding.titleMinutes.visibility = View.GONE\n        }\n\n\n        productDetailsItem2Binding.days.text = daysDifference.toString()\n        productDetailsItem2Binding.hours.text = hoursDifference.toString()\n        productDetailsItem2Binding.minutes.text = minutesDifference.toString()\n        productDetailsItem2Binding.seconds.text = secondDifference.toString()\n    }\n\n    /**send QUestion for sller**/\n    private fun confirmAskQues() {\n        if (!validateAskQuesInputText()) {\n            return\n        } else {\n            productDetialsViewModel.addQuestion(\n                productId,\n                productDetailsItem2Binding.etWriteQuestion.text.trim().toString()\n            )\n        }\n\n    }\n\n    private fun validateAskQuesInputText(): Boolean {\n        val Inputemail =\n            productDetailsItem2Binding.etWriteQuestion!!.text.toString().trim { it <= ' ' }\n\n        return if (Inputemail.isEmpty()) {\n            showError(getString(R.string.Please_enter, getString(R.string.Question)))\n            false\n        } else {\n            true\n        }\n    }\n\n\n    override fun onProductSelect(position: Int, productID: Int, categoryID: Int) {\n        goToProductDetails(productID)\n    }\n\n    private fun goToProductDetails(productID: Int) {\n        startActivity(Intent(this, ProductDetailsActivity::class.java).apply {\n            putExtra(ConstantObjects.productIdKey, productID)\n            putExtra(\"Template\", \"\")\n        })\n        finish()\n    }\n\n    override fun onAddProductToFav(position: Int, productID: Int, categoryID: Int) {\n        if (HelpFunctions.isUserLoggedIn()) {\n            status_product_added_to_fav_from = added_from_last_similerProducts_status\n            added_position_from_last_Product = position\n            productDetialsViewModel.addProductToFav(productID)\n        } else {\n            startActivity(\n                Intent(\n                    this,\n                    SignInActivity::class.java\n                ).apply {})\n        }\n\n\n    }\n\n    override fun onShowMoreSetting(position: Int, productID: Int, categoryID: Int) {\n\n    }\n\n    override fun onBackPressed() {\n        val returnIntent = Intent().apply {\n            putExtra(ConstantObjects.productIdKey, productId)\n            putExtra(ConstantObjects.productFavStatusKey, productfavStatus)\n        }\n\n        // Check if the current activity is the root of the task (no other activities to go back to)\n        if (isTaskRoot) {\n            // If it's the root, go to the main activity\n            val mainIntent = Intent(this, MainActivity::class.java)\n            mainIntent.flags = Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_NEW_TASK\n            startActivity(mainIntent)\n            finish()\n        } else {\n            // Not the root, return to the previous activity in the stack\n            setResult(Activity.RESULT_OK, returnIntent)\n            super.onBackPressed()  // Proceed with normal back navigation\n        }\n    }\n\n\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n        super.onActivityResult(requestCode, resultCode, data)\n        if (resultCode == RESULT_OK && requestCode == addProductReviewRequestCode) {\n            //var addRateItem: AddRateItem? =data?.getParcelableExtra(ConstantObjects.rateObjectKey)\n            productDetialsViewModel.getProductRatesForProductDetails(productId)\n\n        }\n\n    }\n\n    override fun onSelectQuestion(position: Int) {\n        if (isMyProduct) {\n            val answerDialog = AnswerQuestionDialog(\n                productDetialsViewModel,\n                this,\n                questionsList[position],\n                position,\n                object : AnswerQuestionDialog.SetOnSendAnswer {\n                    override fun onAnswerSuccess(questionItem: QuestionItem, position: Int) {\n                        subQuestionsList[position] = questionItem\n                        questionAnswerAdapter.notifyItemChanged(position)\n                    }\n                })\n            answerDialog.show()\n        }\n    }\n\n    override fun onDestroy() {\n        super.onDestroy()\n        productDetialsViewModel.closeAllCall()\n        productDetialsViewModel.baseCancel()\n\n        if (this::runnable.isInitialized) {\n            handler.removeCallbacks(runnable)\n        }\n\n        sellerProductAdapter.onDestroyHandler()\n        similarProductAdapter.onDestroyHandler()\n    }\n\n    override fun onClickImage(url: String) {\n        val intent = Intent(this@ProductDetailsActivity, ImageViewLargeActivity::class.java)\n        intent.putParcelableArrayListExtra(\"imgList\", productImagesList)\n        intent.putExtra(\"UrlImg\", url)\n        startActivity(intent)\n    }\n\n    private fun gotToAddressPaymentActivity() {\n        val intent = Intent(this, AddressPaymentActivity::class.java)\n        intent.putExtra(\"comeFromProductDetails\", true) // or false, based on your condition\n        startActivity(intent)\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/malqaa/androidappp/newPhase/presentation/activities/productDetailsActivity/ProductDetailsActivity.kt b/app/src/main/java/com/malqaa/androidappp/newPhase/presentation/activities/productDetailsActivity/ProductDetailsActivity.kt
--- a/app/src/main/java/com/malqaa/androidappp/newPhase/presentation/activities/productDetailsActivity/ProductDetailsActivity.kt	(revision ed94b5164f5e02bc4f25acc2e784abfa46af5293)
+++ b/app/src/main/java/com/malqaa/androidappp/newPhase/presentation/activities/productDetailsActivity/ProductDetailsActivity.kt	(date 1747708549631)
@@ -1574,8 +1574,14 @@
         }
     }
 
-
-    override fun onProductSelect(position: Int, productID: Int, categoryID: Int) {
+    override fun onProductSelect(
+        position: Int,
+        productID: Int,
+        categoryID: Int,
+        userId: String,
+        providerId: String,
+        businessAccountId: String
+    ) {
         goToProductDetails(productID)
     }
 
